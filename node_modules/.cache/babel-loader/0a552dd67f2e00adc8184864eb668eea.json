{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/qa/QA_Dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, Button } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst PieChartData = [{\n  name: \"QA\",\n  value: 400,\n  color: \"primary\"\n}, {\n  name: \"System Updates\",\n  value: 300,\n  color: \"secondary\"\n}, {\n  name: \"Quality Control Change\",\n  value: 300,\n  color: \"warning\"\n}, {\n  name: \"Pending System Update\",\n  value: 200,\n  color: \"success\"\n}];\nexport default function QA_Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"QA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"This Month's Bugs Detected\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.performanceLegendWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Created\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Closed\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Open\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: 77,\n    classes: {\n      barColorPrimary: classes.progressBarSuccess\n    },\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Closed\"), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: 77,\n    classes: {\n      barColorPrimary: classes.progressBarPrimary\n    },\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Open\"), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: 73,\n    classes: {\n      barColorPrimary: classes.progressBarWarning\n    },\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Open\"), /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"77\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"QA Changes Needed\"), /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"73\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Bugs Resolved Per Sprint\",\n    upperTitle: true,\n    bodyClass: classes.fullHeightBody,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.visitsNumberContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"xl\",\n    weight: \"medium\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"12,678\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 100,\n    height: 30,\n    data: [{\n      value: 10\n    }, {\n      value: 15\n    }, {\n      value: 10\n    }, {\n      value: 17\n    }, {\n      value: 18\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Issue Breakdown\",\n    upperTitle: true,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 144,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: PieChartData,\n    innerRadius: 30,\n    outerRadius: 40,\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, PieChartData.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: theme.palette[entry.color].main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pieChartLegendWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, PieChartData.map(({\n    name,\n    value,\n    color\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: color,\n    className: classes.legendItemContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      whiteSpace: \"nowrap\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }\n  }, \"\\xA0\", name, \"\\xA0\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }, \"\\xA0\", value)))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, \"Defect Burn Time\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, \"QA\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, \"Dev\"))), /*#__PURE__*/React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"daily\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }, \"Daily\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"weekly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }\n    }, \"Weekly\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"monthly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, \"Monthly\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 2500, 5000, 7500],\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    tickFormatter: i => i + 1,\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"desktop\",\n    fill: theme.palette.background.light,\n    strokeWidth: 0,\n    activeDot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"mobile\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    activeDot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"tablet\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Bugs per Client\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    data: mock.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Bugs per Product\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    data: mock.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  })))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/qa/QA_Dashboard.js"],"names":["React","useState","Grid","LinearProgress","Select","OutlinedInput","MenuItem","Button","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","PieChartData","name","value","color","QA_Dashboard","props","classes","theme","mainChartState","setMainChartState","card","fullHeightBody","performanceLegendWrapper","legendElement","legendElementText","progressSection","progressSectionTitle","barColorPrimary","progressBarSuccess","progress","progressBarPrimary","progressBarWarning","visitsNumberContainer","palette","primary","main","map","entry","index","pieChartLegendWrapper","legendItemContainer","whiteSpace","fontSize","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","left","bottom","fill","text","hint","i","background","light","warning","stroke","dark","strokeWidth","tableWidget","table","getRandomData","length","min","max","multiplier","maxDiff","array","Array","lastValue","item","randomValue","Math","floor","random","resultArray","tablet","desktop","mobile","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"QA\", value: 400, color: \"primary\" },\n  { name: \"System Updates\", value: 300, color: \"secondary\" },\n  { name: \"Quality Control Change\", value: 300, color: \"warning\" },\n  { name: \"Pending System Update\", value: 200, color: \"success\" },\n];\n\n\nexport default function QA_Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"QA\"/>\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"This Month's Bugs Detected\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n            <div className={classes.legendElement}>\n                <Dot color=\"success\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Created\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Closed\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Open\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Created\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarSuccess }}\n                className={classes.progress}\n              />\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Closed\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Open\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n            <br/>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Open\n                </Typography>\n                <Typography size=\"md\">77</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  QA Changes Needed\n                </Typography>\n                <Typography size=\"md\">73</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Bugs Resolved Per Sprint\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                12,678\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            {/* <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Created\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Closed\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n            </Grid> */}\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Issue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Defect Burn Time\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      QA\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Dev\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {/* Could possibly use in the future but commenting out charts for now */}\n        {/* {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))} */}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Bugs per Client\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            title=\"Bugs per Product\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n"]},"metadata":{},"sourceType":"module"}