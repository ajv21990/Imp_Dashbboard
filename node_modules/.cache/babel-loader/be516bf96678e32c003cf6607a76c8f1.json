{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/Test_Cases_Service.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport SecCharts from './components/scan_charts';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, Button, Divider } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis, Legend, Tooltip, BarChart, Bar } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst systemUpdateData = getSystemUpdateData();\nexport default function Test_Cases_Service(props) {\n  let COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error'];\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  let creditIntegrations = [\"Experian\", \"TransUnion\", \"Equifax\"];\n  var [integrationState, setIntegrationState] = useState(creditIntegrations);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Test Case Service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"credit-integration-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Credit Integration\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: integrationState,\n    onChange: e => setIntegrationState(e.target.value),\n    inputProps: {\n      name: 'credit-integration',\n      id: 'credit-integration-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Experian\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Experian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"TransUnion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"TransUnion\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Equifax\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Equifax\"))));\n} // ##############################Functions to grab Data#########################################\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var stats = [31.7, 52.4, 15.9, 0];\n  let level = [\"Informational\", \"Low\", \"Medium\", \"High\"];\n\n  for (let i = 0; i < level.length; i++) {\n    resultArray.push({\n      stats: stats[i],\n      level: level[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getSystemUpdateData() {\n  var resultArray = [];\n  var Created = [58, 45, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  var Implemented = [55, 39, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov', 'Dec'];\n\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Created: Created[i],\n      Implemented: Implemented[i],\n      month: month[i]\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/Test_Cases_Service.js"],"names":["React","useEffect","useState","axios","SecCharts","InputLabel","Grid","LinearProgress","Select","OutlinedInput","MenuItem","Button","Divider","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","Legend","Tooltip","BarChart","Bar","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","systemUpdateData","getSystemUpdateData","Test_Cases_Service","props","COLORS","classes","theme","creditIntegrations","integrationState","setIntegrationState","e","target","value","name","id","resultArray","stats","level","i","length","push","Created","Implemented","month"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,MAHF,EAIEC,aAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,OAPF,QAQO,mBARP;AASA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,mBADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,QAPF,EAQEC,GARF,EASEC,IATF,EAUEC,KAVF,EAWEC,KAXF,EAYEC,MAZF,EAaEC,OAbF,EAcEC,QAdF,EAeEC,GAfF,QAgBO,UAhBP,C,CAiBA;;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,OAAOC,GAAP,MAAgB,yCAAhB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,aAAa,GAAGC,gBAAgB,EAAtC;AACA,MAAMC,gBAAgB,GAAGC,mBAAmB,EAA5C;AAGA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAClD,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,OAAlC,CAAb;AACA,MAAIC,OAAO,GAAGf,SAAS,EAAvB;AACA,MAAIgB,KAAK,GAAGhC,QAAQ,EAApB,CAHkD,CAMhD;;AACA,MAAIiC,kBAAkB,GAAG,CAAC,UAAD,EAAY,YAAZ,EAAyB,SAAzB,CAAzB;AACA,MAAI,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0C9C,QAAQ,CAAC4C,kBAAD,CAAtD;AAEA,sBACE,uDACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,kCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEE,oBAAC,MAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,KAAK,EAAEC,gBAFT;AAGE,IAAA,QAAQ,EAAEE,CAAC,IAAID,mBAAmB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAHpC;AAIE,IAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,oBADI;AAEVC,MAAAA,EAAE,EAAE;AAFM,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAQ,IAAA,KAAK,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAQ,IAAA,KAAK,EAAE,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAQ,IAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF,CAFF,CAFF,CADF;AAsBD,C,CAED;;AACA,SAASf,gBAAT,GAA4B;AAC1B,MAAIgB,WAAW,GAAG,EAAlB;AACA,MAAIC,KAAK,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,CAAhB,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAC,eAAD,EAAiB,KAAjB,EAAuB,QAAvB,EAAgC,MAAhC,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCH,IAAAA,WAAW,CAACK,IAAZ,CAAiB;AACfJ,MAAAA,KAAK,EAAEA,KAAK,CAACE,CAAD,CADG;AAEfD,MAAAA,KAAK,EAAEA,KAAK,CAACC,CAAD;AAFG,KAAjB;AAID;;AACD,SAAOH,WAAP;AACD;;AAED,SAASd,mBAAT,GAA+B;AAC7B,MAAIc,WAAW,GAAG,EAAlB;AACA,MAAIM,OAAO,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,CAAd;AACA,MAAIC,WAAW,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,CAAlB;AACA,MAAIC,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,MAA3C,EAAmD,KAAnD,EAA0D,MAA1D,EAAkE,KAAlE,EAAyE,KAAzE,EAA+E,KAA/E,CAAZ;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,KAAK,CAACJ,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCH,IAAAA,WAAW,CAACK,IAAZ,CAAiB;AACfC,MAAAA,OAAO,EAAEA,OAAO,CAACH,CAAD,CADD;AAEfI,MAAAA,WAAW,EAAEA,WAAW,CAACJ,CAAD,CAFT;AAGfK,MAAAA,KAAK,EAAEA,KAAK,CAACL,CAAD;AAHG,KAAjB;AAKD;;AACD,SAAOH,WAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport SecCharts from './components/scan_charts'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n  Divider\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n  Legend,\n  Tooltip,\n  BarChart,\n  Bar\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst systemUpdateData = getSystemUpdateData();\n \n\nexport default function Test_Cases_Service(props) {\nlet COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error']\nvar classes = useStyles();\nvar theme = useTheme();\n\n\n  // local\n  let creditIntegrations = [\"Experian\",\"TransUnion\",\"Equifax\"]\n  var [integrationState, setIntegrationState] = useState(creditIntegrations);\n\n  return (\n    <>\n      <PageTitle title=\"Test Case Service\"/>\n      <div>\n      <InputLabel htmlFor=\"credit-integration-native-simple\">Credit Integration</InputLabel>\n        <Select\n          native\n          value={integrationState}\n          onChange={e => setIntegrationState(e.target.value)}\n          inputProps={{\n            name: 'credit-integration',\n            id: 'credit-integration-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={\"Experian\"}>Experian</option>\n          <option value={\"TransUnion\"}>TransUnion</option>\n          <option value={\"Equifax\"}>Equifax</option>\n        </Select>\n      </div>\n    </>\n  );\n}\n\n// ##############################Functions to grab Data#########################################\nfunction getMainChartData() {\n  var resultArray = [];\n  var stats = [31.7,52.4,15.9,0];\n  let level = [\"Informational\",\"Low\",\"Medium\",\"High\"]\n  for (let i = 0; i < level.length; i++) {\n    resultArray.push({\n      stats: stats[i],\n      level: level[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getSystemUpdateData() {\n  var resultArray = [];\n  var Created = [58,45,39,0,0,0,0,0,0,0,0,0];\n  var Implemented = [55,39,42,0,0,0,0,0,0,0,0,0];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov','Dec']\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Created: Created[i],\n      Implemented: Implemented[i],\n      month: month[i]\n    });\n  }\n  return resultArray;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}