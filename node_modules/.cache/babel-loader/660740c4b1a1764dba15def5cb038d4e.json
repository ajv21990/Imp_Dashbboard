{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/qa/components/Table/Table.js\";\nimport React from \"react\";\nimport { Table, TableRow, TableHead, TableBody, TableCell, Chip } from \"@material-ui/core\";\nimport useStyles from \"../../styles\"; // Change status here to indicate if a we are over or under threshold\n\nconst states = {\n  sent: \"success\",\n  pending: \"warning\",\n  declined: \"secondary\"\n};\nexport default function TableComponent({\n  data\n}) {\n  // Setting constants for Project Data\n  const [AMBugs, setAMBugs] = useState([]);\n  const [BBOWBugs, setBBOWBugs] = useState([]);\n  const [BBOKBugs, setBBOKBugs] = useState([]);\n  const [BSBBugs, setBSBBugs] = useState([]);\n  const [CSBBugs, setCSBBugs] = useState([]);\n  const [EquitableBugs, setEquitableBugs] = useState([]);\n  const [EvergreenBugs, setEvergreenBugs] = useState([]);\n  const [FBABugs, setFBABugs] = useState([]);\n  const [LasAnimasBugs, setLasAnimasBugs] = useState([]);\n  const [ICBABugs, setICBABugs] = useState([]);\n  const [SuttonBugs, setSuttonBugs] = useState([]);\n  const [TCMBugs, setTCMBugs] = useState([]);\n  const [UBBBugs, setUBBBugs] = useState([]);\n  const [WaFedBugs, setWaFedBugs] = useState([]); // API Calls to fill bug data\n\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/projects/am-bank-inc/issues.json?query_id=117&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\").then(res => res.json()).then(result => {\n      setAMBugs(result);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  data[0].bugs = AMBugs.total_count;\n  const classes = useStyles();\n  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\n  keys.shift(); // delete \"id\" key\n\n  console.log(data);\n  return /*#__PURE__*/React.createElement(Table, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, keys.map(key => /*#__PURE__*/React.createElement(TableCell, {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, key)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, data.map(({\n    id,\n    name,\n    pm,\n    burn_time,\n    bugs,\n    status\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"pl-3 fw-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, pm), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, burn_time), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, bugs), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    label: status,\n    classes: {\n      root: classes[states[status.toLowerCase()]]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/qa/components/Table/Table.js"],"names":["React","Table","TableRow","TableHead","TableBody","TableCell","Chip","useStyles","states","sent","pending","declined","TableComponent","data","AMBugs","setAMBugs","useState","BBOWBugs","setBBOWBugs","BBOKBugs","setBBOKBugs","BSBBugs","setBSBBugs","CSBBugs","setCSBBugs","EquitableBugs","setEquitableBugs","EvergreenBugs","setEvergreenBugs","FBABugs","setFBABugs","LasAnimasBugs","setLasAnimasBugs","ICBABugs","setICBABugs","SuttonBugs","setSuttonBugs","TCMBugs","setTCMBugs","UBBBugs","setUBBBugs","WaFedBugs","setWaFedBugs","useEffect","fetch","then","res","json","result","error","console","log","bugs","total_count","classes","keys","Object","map","i","toUpperCase","shift","key","id","name","pm","burn_time","status","root","toLowerCase"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Chip\n} from \"@material-ui/core\";\nimport useStyles from \"../../styles\";\n\n// Change status here to indicate if a we are over or under threshold\nconst states = {\n  sent: \"success\",\n  pending: \"warning\",\n  declined: \"secondary\",\n};\n\nexport default function TableComponent({ data }) {\n  // Setting constants for Project Data\n  const [AMBugs,setAMBugs] = useState([])\n  const [BBOWBugs,setBBOWBugs] = useState([])\n  const [BBOKBugs,setBBOKBugs] = useState([])\n  const [BSBBugs,setBSBBugs] = useState([])\n  const [CSBBugs,setCSBBugs] = useState([])\n  const [EquitableBugs,setEquitableBugs] = useState([])\n  const [EvergreenBugs,setEvergreenBugs] = useState([])\n  const [FBABugs,setFBABugs] = useState([])\n  const [LasAnimasBugs,setLasAnimasBugs] = useState([])\n  const [ICBABugs,setICBABugs] = useState([])\n  const [SuttonBugs,setSuttonBugs] = useState([])\n  const [TCMBugs,setTCMBugs] = useState([])\n  const [UBBBugs,setUBBBugs] = useState([])\n  const [WaFedBugs,setWaFedBugs] = useState([])\n\n  // API Calls to fill bug data\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/projects/am-bank-inc/issues.json?query_id=117&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n    .then( res => res.json())\n    .then(\n      (result) => {\n        setAMBugs(result)\n      },\n      (error) =>{\n        console.log(error)\n      }\n    )\n  },[])\ndata[0].bugs = AMBugs.total_count\n\n\n\n\n\n\n\n\n\n\n\n  const classes = useStyles();\n  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\n  keys.shift(); // delete \"id\" key\n  console.log(data)\n  return (\n    <Table className=\"mb-0\">\n      <TableHead>\n        <TableRow>\n          {keys.map(key => (\n            <TableCell key={key}>{key}</TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map(({ id, name, pm, burn_time, bugs, status }) => (\n          <TableRow key={id}>\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\n            <TableCell>{pm}</TableCell>\n            <TableCell>{burn_time}</TableCell>\n            <TableCell>{bugs}</TableCell>\n            <TableCell>\n              <Chip label={status} classes={{root: classes[states[status.toLowerCase()]]}}/>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}