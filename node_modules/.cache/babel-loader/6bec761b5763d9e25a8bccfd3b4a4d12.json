{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/Test_Cases_Service.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport SecCharts from './components/scan_charts';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select } from \"@material-ui/core\"; // styles\n\nimport useStyles from \"./styles\";\nimport { useTheme } from \"@material-ui/styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport TestProfileDropdown from './components/testProfileDropdown.js';\nimport StoreDropdown from './components/storeDropdown.js';\nexport default function Test_Cases_Service(props) {\n  let COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error'];\n  var classes = useStyles();\n  var theme = useTheme(); // Defining local variables and states\n\n  const creditIntegrations = [\"Experian\", \"TransUnion\", \"Equifax\"];\n  const creditScore = [\"High\", \"Average\", \"Low\", 'No Credit'];\n  const alphaStores = [mock.alphaStores];\n  const testProfiles = [mock.testCaseExp, mock.testCaseTU, mock.testCaseEq];\n  const products = [mock.alphaStores[0].products, mock.alphaStores[1].products, mock.alphaStores[2].products, mock.alphaStores[3].products, mock.alphaStores[5].products];\n  var [integrationState, setIntegrationState] = useState(creditIntegrations);\n  var [creditScoreState, setCreditScoreState] = useState(creditScore);\n  var [alphaStoreState, setAlphaStoreState] = useState(alphaStores);\n  var [testProfilesState, settestProfilesState] = useState(testProfiles);\n  var [productsState, setProductsState] = useState(products);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Test Case Service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"credit-integration-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Credit Integration\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: integrationState,\n    onChange: e => setIntegrationState(e.target.value),\n    inputProps: {\n      name: 'credit-integration',\n      id: 'credit-integration-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditIntegrations[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, creditIntegrations[0]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditIntegrations[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, creditIntegrations[1]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditIntegrations[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, creditIntegrations[2])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"credit-score-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Credit Score\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: creditScoreState,\n    onChange: e => setCreditScoreState(e.target.value),\n    inputProps: {\n      name: 'credit-score',\n      id: 'credit-score-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditScore[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, creditScore[0]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditScore[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, creditScore[1]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditScore[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, creditScore[2]), integrationState === 'Experian' ? /*#__PURE__*/React.createElement(\"option\", {\n    value: creditScore[3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, creditScore[3]) : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TestProfileDropdown, {\n    testProfiles: testProfiles,\n    testProfilesState: testProfilesState,\n    settestProfilesState: settestProfilesState,\n    integrationState: integrationState,\n    creditScoreState: creditScoreState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StoreDropdown, {\n    alphaStoreState: alphaStoreState,\n    setAlphaStoreState: setAlphaStoreState,\n    integrationState: integrationState,\n    alphaStores: alphaStores,\n    productsState: productsState,\n    setProductsState: setProductsState,\n    products: products,\n    testProfilesState: testProfilesState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/Test_Cases_Service.js"],"names":["React","useEffect","useState","axios","SecCharts","InputLabel","Select","useStyles","useTheme","mock","Widget","PageTitle","Typography","TestProfileDropdown","StoreDropdown","Test_Cases_Service","props","COLORS","classes","theme","creditIntegrations","creditScore","alphaStores","testProfiles","testCaseExp","testCaseTU","testCaseEq","products","integrationState","setIntegrationState","creditScoreState","setCreditScoreState","alphaStoreState","setAlphaStoreState","testProfilesState","settestProfilesState","productsState","setProductsState","e","target","value","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport SecCharts from './components/scan_charts'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {\n  Select\n} from \"@material-ui/core\";\n// styles\nimport useStyles from \"./styles\";\nimport { useTheme } from \"@material-ui/styles\";\n\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport TestProfileDropdown from './components/testProfileDropdown.js'\nimport StoreDropdown from './components/storeDropdown.js'\n\n\n\n \n\nexport default function Test_Cases_Service(props) {\nlet COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error']\nvar classes = useStyles();\nvar theme = useTheme();\n\n\n  // Defining local variables and states\n  const creditIntegrations = [\"Experian\",\"TransUnion\",\"Equifax\"]\n  const creditScore = [\"High\",\"Average\",\"Low\", 'No Credit']\n  const alphaStores = [mock.alphaStores]\n  const testProfiles = [mock.testCaseExp, mock.testCaseTU, mock.testCaseEq] \n  const products = [mock.alphaStores[0].products,mock.alphaStores[1].products,mock.alphaStores[2].products,mock.alphaStores[3].products,mock.alphaStores[5].products]\n  \n  var [integrationState, setIntegrationState] = useState(creditIntegrations);\n  var [creditScoreState, setCreditScoreState] = useState(creditScore);\n  var [alphaStoreState, setAlphaStoreState] = useState(alphaStores);\n  var [testProfilesState, settestProfilesState] = useState(testProfiles);\n  var [productsState, setProductsState] = useState(products);\n  \n\n  return (\n    <>\n      <PageTitle title=\"Test Case Service\"/>\n      <div>\n        <div>\n\n        </div>\n      <InputLabel htmlFor=\"credit-integration-native-simple\">Credit Integration</InputLabel>\n        <Select\n          native\n          value={integrationState}\n          onChange={e => setIntegrationState(e.target.value)}\n          inputProps={{\n            name: 'credit-integration',\n            id: 'credit-integration-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={creditIntegrations[0]}>{creditIntegrations[0]}</option>\n          <option value={creditIntegrations[1]}>{creditIntegrations[1]}</option>\n          <option value={creditIntegrations[2]}>{creditIntegrations[2]}</option>\n        </Select>\n        <br/>\n        <br/>\n        <InputLabel htmlFor=\"credit-score-native-simple\">Credit Score</InputLabel>\n        <Select\n          native\n          value={creditScoreState}\n          onChange={e => setCreditScoreState(e.target.value)}\n          inputProps={{\n            name: 'credit-score',\n            id: 'credit-score-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={creditScore[0]}>{creditScore[0]}</option>\n          <option value={creditScore[1]}>{creditScore[1]}</option>\n          <option value={creditScore[2]}>{creditScore[2]}</option>\n          {integrationState === 'Experian' ?(\n          <option value={creditScore[3]}>{creditScore[3]}</option>\n          ): null}\n        </Select>\n        <br/>\n        <br/>\n        <TestProfileDropdown\n        testProfiles = {testProfiles}\n        testProfilesState = {testProfilesState}\n        settestProfilesState = {settestProfilesState}\n        integrationState = {integrationState}\n        creditScoreState = {creditScoreState}\n        />\n        <br/>\n        <StoreDropdown\n        alphaStoreState = {alphaStoreState}\n        setAlphaStoreState = {setAlphaStoreState}\n        integrationState = {integrationState}\n        alphaStores = {alphaStores}\n        productsState = {productsState}\n        setProductsState = {setProductsState}\n        products = {products}\n        testProfilesState = {testProfilesState}\n\n        />\n      </div>\n    </>\n  );\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}