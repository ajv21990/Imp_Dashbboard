{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/security/Security_Dashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport SecCharts from './components/scan_charts';\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, Button, Divider } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis, Legend, Tooltip, BarChart, Bar } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\nconst ClientChartData = getClientBurnData();\nlet PieChartData = [{\n  name: \"Internally Reported\",\n  value: 0,\n  color: \"warning\"\n}, {\n  name: \"Customer Reported\",\n  value: 0,\n  color: \"primary\"\n}];\nexport default function QA_Dashboard(props) {\n  // Setting constants for QA Data\n  const [closedIssues, setClosedIssues] = useState([]);\n  const [openIssues, setOpenIssues] = useState([]);\n  const [createdIssues, setCreatedIssues] = useState([]);\n  const [changesIssues, setChangesIssues] = useState([]);\n  const [janIssues, setJanIssues] = useState([]);\n  const [febIssues, setFebIssues] = useState([]);\n  const [cusReportBugs, setCusReportBugs] = useState([]);\n  let COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error'];\n  PieChartData[1].value = cusReportBugs.total_count;\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count;\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var [mainChartState, setMainChartState] = useState(\"overall\");\n  var [ClientChartState, setClientChartState] = useState(\"YTD\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Security\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Audit\",\n    upperTitle: true,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"PCI DSS\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Due: March 2021\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"SOC2 Type II\"), /*#__PURE__*/React.createElement(Typography, {\n    weight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Due: June 2021\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Policy Status\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Data Classification\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Compliant\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Data Protection\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Compliant\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Compliant\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Disaster Recovery\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Compliant\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"PCI\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Compliant\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"SOC\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Compliant\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"UAC\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Compliant\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"MK System Vulnerability Stats\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, \"Informational\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"Low\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Medium\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"High\"))), /*#__PURE__*/React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"overall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, \"Overall\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \"Dashboard\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, \"CLOSE\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"store\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \"Store\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"checkout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, \"Checkout\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"customerPortal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, \"Customer Portal\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, mainChartState === \"overall\" ?\n  /*#__PURE__*/\n  // <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n  //   <PieChart\n  //     margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n  //     data={mainChartData}\n  //   >\n  //     <Pie data={mainChartData} dataKey=\"stats\" nameKey=\"level\" label>\n  //     {\n  //       mainChartData.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n  //     }\n  //     </Pie>\n  //   </PieChart>\n  // </ResponsiveContainer>\n  React.createElement(SecCharts, {\n    chartState: mainChartState,\n    stats: mainChartData.stats,\n    level: mainChartData.level,\n    color: COLORS,\n    data: mainChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ProductChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 5, 10, 15, 20, 25],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"product\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Jan\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Feb\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Mar\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \"System Update Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, \"Created vs Implemented\"))), /*#__PURE__*/React.createElement(Select, {\n      value: ClientChartState,\n      onChange: e => setClientChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"YTD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, \"Issues\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"burn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }, \"Burn Time\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, ClientChartState === \"YTD\" ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ClientChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 15, 25, 35, 45],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"stores\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Jan\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Feb\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Mar\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ClientChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 25, 50, 75, 100, 125, 150],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"stores\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"JanBurn\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"FebBurn\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"MarBurn\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  })))))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var stats = [31.7, 52.4, 15.9, 0];\n  let level = [\"Informational\", \"Low\", \"Medium\", \"High\"];\n\n  for (let i = 0; i < level.length; i++) {\n    resultArray.push({\n      stats: stats[i],\n      level: level[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getProductBurnData() {\n  var resultArray = [];\n  var Jan = [6.35, 0, 31.01, 0, 20.47, 1.80];\n  var Feb = [1.15, 5.83, 3.74, 0, 18.07, 3.21];\n  var Mar = [1.95, 1.45, 0, 0, .17, 0];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services'];\n\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      Jan: Jan[i],\n      Feb: Feb[i],\n      Mar: Mar[i],\n      product: product[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getClientBurnData() {\n  var resultArray = [];\n  var Jan = [4, 0, 4, 0, 0, 0, 26, 5, 0, 5, 11, 8, 0];\n  var Feb = [7, 2, 8, 2, 1, 0, 43, 3, 5, 5, 5, 1, 0];\n  var Mar = [2, 1, 1, 0, 2, 1, 33, 3, 6, 1, 2, 1, 2];\n  var JanBurn = [4, 0, 6.79, 0, 0, 0, 51.72, 17.36, 0, 8.93, 27.66, 9.86, 0];\n  var FebBurn = [13.08, 3.88, 19.07, 6.32, .18, 0, 147.66, 7.76, 17.29, 9.30, 15.07, 4.59, 0];\n  var MarBurn = [21.28, 4.10, 6.07, 0, 6.27, .17, 147.67, 11.77, 8.33, 4.68, 7.75, 1.02, 5.13];\n  let stores = [\"AM Bank\", 'BBOW', 'BBOK', 'Beneficial', 'CSB New Castle', 'Equitable', 'Evergreen', 'FBA', 'Las Animas', 'ICBA', 'TCM', 'UBB', 'WaFd'];\n\n  for (let i = 0; i < stores.length; i++) {\n    resultArray.push({\n      Jan: Jan[i],\n      Feb: Feb[i],\n      Mar: Mar[i],\n      JanBurn: JanBurn[i],\n      FebBurn: FebBurn[i],\n      MarBurn: MarBurn[i],\n      stores: stores[i]\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/security/Security_Dashboard.js"],"names":["React","useEffect","useState","axios","SecCharts","Grid","LinearProgress","Select","OutlinedInput","MenuItem","Button","Divider","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","Legend","Tooltip","BarChart","Bar","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","ProductChartData","getProductBurnData","ClientChartData","getClientBurnData","PieChartData","name","value","color","QA_Dashboard","props","closedIssues","setClosedIssues","openIssues","setOpenIssues","createdIssues","setCreatedIssues","changesIssues","setChangesIssues","janIssues","setJanIssues","febIssues","setFebIssues","cusReportBugs","setCusReportBugs","COLORS","total_count","classes","theme","mainChartState","setMainChartState","ClientChartState","setClientChartState","card","fullHeightBody","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","stats","level","top","right","left","bottom","fill","palette","text","primary","fontSize","i","getRandomData","length","min","max","multiplier","maxDiff","array","Array","lastValue","map","item","index","randomValue","Math","floor","random","resultArray","push","Jan","Feb","Mar","product","JanBurn","FebBurn","MarBurn","stores"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,MAHF,EAIEC,aAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,OAPF,QAQO,mBARP;AASA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,mBADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,QAPF,EAQEC,GARF,EASEC,IATF,EAUEC,KAVF,EAWEC,KAXF,EAYEC,MAZF,EAaEC,OAbF,EAcEC,QAdF,EAeEC,GAfF,QAgBO,UAhBP,C,CAiBA;;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,OAAOC,GAAP,MAAgB,yCAAhB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,aAAa,GAAGC,gBAAgB,EAAtC;AACA,MAAMC,gBAAgB,GAAGC,kBAAkB,EAA3C;AACA,MAAMC,eAAe,GAAGC,iBAAiB,EAAzC;AAEA,IAAIC,YAAY,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE,qBAAR;AAA+BC,EAAAA,KAAK,EAAE,CAAtC;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CADiB,EAEjB;AAAEF,EAAAA,IAAI,EAAE,mBAAR;AAA6BC,EAAAA,KAAK,EAAE,CAApC;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,CAFiB,CAAnB;AAQA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5C;AACA,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiC/C,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACgD,UAAD,EAAYC,aAAZ,IAA6BjD,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACkD,aAAD,EAAeC,gBAAf,IAAmCnD,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACoD,aAAD,EAAeC,gBAAf,IAAmCrD,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACsD,SAAD,EAAWC,YAAX,IAA2BvD,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACwD,SAAD,EAAWC,YAAX,IAA2BzD,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAC0D,aAAD,EAAeC,gBAAf,IAAmC3D,QAAQ,CAAC,EAAD,CAAjD;AAEA,MAAI4D,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,OAAlC,CAAb;AAGEpB,EAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBE,KAAhB,GAAwBgB,aAAa,CAACG,WAAtC;AACArB,EAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBE,KAAhB,GAAwBQ,aAAa,CAACW,WAAd,GAA4BH,aAAa,CAACG,WAAlE;AAGA,MAAIC,OAAO,GAAGpC,SAAS,EAAvB;AACA,MAAIqC,KAAK,GAAGrD,QAAQ,EAApB,CAlB0C,CAoB1C;;AACA,MAAI,CAACsD,cAAD,EAAiBC,iBAAjB,IAAsCjE,QAAQ,CAAC,SAAD,CAAlD;AACA,MAAI,CAACkE,gBAAD,EAAmBC,mBAAnB,IAA0CnE,QAAQ,CAAC,KAAD,CAAtD;AAEA,sBACE,uDACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,SAAS,EAAE8D,OAAO,CAACM,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,eAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CANA,CADF,CADF,eAmBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,SAAS,EAAEN,OAAO,CAACM,IAHrB;AAIE,IAAA,SAAS,EAAEN,OAAO,CAACO,cAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,eAME,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eASE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAaE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbF,eAcE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAiBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAjBF,eAkBE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,eAqBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WArBF,eAsBE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eAyBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAzBF,eA0BE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1BF,CAPA,CADF,CAnBF,eA2DE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEP,OAAO,CAACQ,aADrB;AAEE,IAAA,MAAM,eACJ;AAAK,MAAA,SAAS,EAAER,OAAO,CAACS,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,eAAe,EAAC,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAQE;AAAK,MAAA,SAAS,EAAET,OAAO,CAACU,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEV,OAAO,CAACW,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEX,OAAO,CAACY,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,eAOE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACW,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEX,OAAO,CAACY,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAPF,eAaE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACW,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEX,OAAO,CAACY,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAbF,eAmBE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACW,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEX,OAAO,CAACY,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAnBF,CARF,eAkCE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEV,cADT;AAEE,MAAA,QAAQ,EAAEW,CAAC,IAAIV,iBAAiB,CAACU,CAAC,CAACC,MAAF,CAASlC,KAAV,CAFlC;AAGE,MAAA,KAAK,eACH,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE,CADd;AAEE,QAAA,OAAO,EAAE;AACPmC,UAAAA,cAAc,EAAEf,OAAO,CAACgB,mBADjB;AAEPC,UAAAA,KAAK,EAAEjB,OAAO,CAACkB;AAFR,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,eAeE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,eAgBE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,eAiBE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBF,eAkBE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAmBE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAnBF,CAlCF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA8DIhB,cAAc,KAAK,SAApB;AAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAC,SAAD;AAAW,IAAA,UAAU,EAAEA,cAAvB;AAAuC,IAAA,KAAK,EAAE9B,aAAa,CAAC+C,KAA5D;AAAmE,IAAA,KAAK,EAAE/C,aAAa,CAACgD,KAAxF;AAA+F,IAAA,KAAK,EAAEtB,MAAtG;AAA8G,IAAA,IAAI,EAAE1B,aAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdC,gBAgBD,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,QAAQ,EAAE,GAA5C;AAAiD,IAAA,MAAM,EAAE,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACE,IAAA,MAAM,EAAE;AAAEiD,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,CAAC,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,CAAC,EAA7B;AAAiCC,MAAAA,MAAM,EAAE;AAAzC,KADV;AAEE,IAAA,IAAI,EAAElD,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,CADT;AAEE,IAAA,IAAI,EAAE;AAAEmD,MAAAA,IAAI,EAAExB,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAArC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAFR;AAGE,IAAA,MAAM,EAAE5B,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eASE,oBAAC,KAAD;AACA,IAAA,OAAO,EAAG,SADV;AAEE,IAAA,aAAa,EAAEE,CAAC,IAAIA,CAFtB;AAGE,IAAA,IAAI,EAAE;AAAEL,MAAAA,IAAI,EAAExB,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAArC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAHR;AAIE,IAAA,MAAM,EAAE5B,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAgBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAoBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAwBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,IAAI,EAAE,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADA,CA9EF,CADF,CA3DF,eAsLE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE5B,OAAO,CAACQ,aADrB;AAEE,IAAA,MAAM,eACJ;AAAK,MAAA,SAAS,EAAER,OAAO,CAACS,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,eAAe,EAAC,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAQE;AAAK,MAAA,SAAS,EAAET,OAAO,CAACU,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAEV,OAAO,CAACW,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEX,OAAO,CAACY,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADA,CARF,eAeE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAER,gBADT;AAEE,MAAA,QAAQ,EAAES,CAAC,IAAIR,mBAAmB,CAACQ,CAAC,CAACC,MAAF,CAASlC,KAAV,CAFpC;AAGE,MAAA,KAAK,eACH,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE,CADd;AAEE,QAAA,OAAO,EAAE;AACPmC,UAAAA,cAAc,EAAEf,OAAO,CAACgB,mBADjB;AAEPC,UAAAA,KAAK,EAAEjB,OAAO,CAACkB;AAFR,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,CAfF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsCId,gBAAgB,KAAK,KAAtB,gBACD,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,QAAQ,EAAE,GAA5C;AAAiD,IAAA,MAAM,EAAE,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACE,IAAA,MAAM,EAAE;AAAEiB,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,CAAC,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,CAAC,EAA7B;AAAiCC,MAAAA,MAAM,EAAE;AAAzC,KADV;AAEE,IAAA,IAAI,EAAEhD,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,CADT;AAEE,IAAA,IAAI,EAAE;AAAEiD,MAAAA,IAAI,EAAExB,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAArC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAFR;AAGE,IAAA,MAAM,EAAE5B,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eASE,oBAAC,KAAD;AACA,IAAA,OAAO,EAAG,QADV;AAEE,IAAA,aAAa,EAAEE,CAAC,IAAIA,CAFtB;AAGE,IAAA,IAAI,EAAE;AAAEL,MAAAA,IAAI,EAAExB,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAArC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAHR;AAIE,IAAA,MAAM,EAAE5B,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAgBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAoBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAwBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,IAAI,EAAE,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADA,CADC,gBAkCD,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,QAAQ,EAAE,GAA5C;AAAiD,IAAA,MAAM,EAAE,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACE,IAAA,MAAM,EAAE;AAAEP,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,CAAC,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,CAAC,EAA7B;AAAiCC,MAAAA,MAAM,EAAE;AAAzC,KADV;AAEE,IAAA,IAAI,EAAEhD,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAoB,GAApB,EAAyB,GAAzB,CADT;AAEE,IAAA,IAAI,EAAE;AAAEiD,MAAAA,IAAI,EAAExB,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAArC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAFR;AAGE,IAAA,MAAM,EAAE5B,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eASE,oBAAC,KAAD;AACA,IAAA,OAAO,EAAG,QADV;AAEE,IAAA,aAAa,EAAEE,CAAC,IAAIA,CAFtB;AAGE,IAAA,IAAI,EAAE;AAAEL,MAAAA,IAAI,EAAExB,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAArC;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,KAHR;AAIE,IAAA,MAAM,EAAE5B,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBC,OAAnB,GAA6B,IAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAgBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAoBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAwBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAE,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADA,CAxEF,CADF,CAtLF,CAFF,CADF;AAuSD,C,CAED;;AACA,SAASG,aAAT,CAAuBC,MAAvB,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,UAAU,GAAG,EAAtD,EAA0DC,OAAO,GAAG,EAApE,EAAwE;AACtE,MAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUN,MAAV,EAAkBP,IAAlB,EAAZ;AACA,MAAIc,SAAJ;AAEA,SAAOF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,UAAhB,GAA6B,CAAxC,CAAlB;;AAEA,WACEQ,WAAW,IAAIV,GAAf,IACAU,WAAW,IAAIT,GADf,IAECK,SAAS,IAAII,WAAW,GAAGJ,SAAd,GAA0BH,OAH1C,EAIE;AACAO,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,UAAhB,GAA6B,CAAxC,CAAd;AACD;;AAEDI,IAAAA,SAAS,GAAGI,WAAZ;AAEA,WAAO;AAAE/D,MAAAA,KAAK,EAAE+D;AAAT,KAAP;AACD,GAdM,CAAP;AAeD;;AAED,SAAStE,gBAAT,GAA4B;AAC1B,MAAI0E,WAAW,GAAG,EAAlB;AACA,MAAI5B,KAAK,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,CAAhB,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAC,eAAD,EAAiB,KAAjB,EAAuB,QAAvB,EAAgC,MAAhC,CAAZ;;AACA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACY,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACrCiB,IAAAA,WAAW,CAACC,IAAZ,CAAiB;AACf7B,MAAAA,KAAK,EAAEA,KAAK,CAACW,CAAD,CADG;AAEfV,MAAAA,KAAK,EAAEA,KAAK,CAACU,CAAD;AAFG,KAAjB;AAID;;AACD,SAAOiB,WAAP;AACD;;AAED,SAASxE,kBAAT,GAA6B;AAC3B,MAAIwE,WAAW,GAAG,EAAlB;AACA,MAAIE,GAAG,GAAG,CAAC,IAAD,EAAM,CAAN,EAAQ,KAAR,EAAc,CAAd,EAAgB,KAAhB,EAAsB,IAAtB,CAAV;AACA,MAAIC,GAAG,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,CAAhB,EAAkB,KAAlB,EAAwB,IAAxB,CAAV;AACA,MAAIC,GAAG,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,CAAX,EAAa,CAAb,EAAe,GAAf,EAAmB,CAAnB,CAAV;AACA,MAAIC,OAAO,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,UAAlB,EAA8B,cAA9B,EAA8C,kBAA9C,EAAkE,gBAAlE,CAAd;;AACA,OAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,OAAO,CAACpB,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvCiB,IAAAA,WAAW,CAACC,IAAZ,CAAiB;AACfC,MAAAA,GAAG,EAAGA,GAAG,CAACnB,CAAD,CADM;AAEfoB,MAAAA,GAAG,EAAGA,GAAG,CAACpB,CAAD,CAFM;AAGfqB,MAAAA,GAAG,EAAGA,GAAG,CAACrB,CAAD,CAHM;AAIfsB,MAAAA,OAAO,EAAEA,OAAO,CAACtB,CAAD;AAJD,KAAjB;AAMD;;AACD,SAAOiB,WAAP;AACD;;AAED,SAAStE,iBAAT,GAA4B;AAC1B,MAAIsE,WAAW,GAAG,EAAlB;AACA,MAAIE,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,EAAb,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,EAAtB,EAAyB,CAAzB,EAA2B,CAA3B,CAAV;AACA,MAAIC,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,EAAb,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,CAAV;AACA,MAAIC,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,EAAb,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,CAAV;AAEA,MAAIE,OAAO,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,IAAL,EAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,EAAgB,KAAhB,EAAsB,KAAtB,EAA4B,CAA5B,EAA8B,IAA9B,EAAmC,KAAnC,EAAyC,IAAzC,EAA8C,CAA9C,CAAd;AACA,MAAIC,OAAO,GAAG,CAAC,KAAD,EAAO,IAAP,EAAY,KAAZ,EAAkB,IAAlB,EAAuB,GAAvB,EAA2B,CAA3B,EAA6B,MAA7B,EAAoC,IAApC,EAAyC,KAAzC,EAA+C,IAA/C,EAAoD,KAApD,EAA0D,IAA1D,EAA+D,CAA/D,CAAd;AACA,MAAIC,OAAO,GAAG,CAAC,KAAD,EAAO,IAAP,EAAY,IAAZ,EAAiB,CAAjB,EAAmB,IAAnB,EAAwB,GAAxB,EAA4B,MAA5B,EAAmC,KAAnC,EAAyC,IAAzC,EAA8C,IAA9C,EAAmD,IAAnD,EAAwD,IAAxD,EAA6D,IAA7D,CAAd;AAEA,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,MAApB,EAA4B,YAA5B,EAA0C,gBAA1C,EAA4D,WAA5D,EAAwE,WAAxE,EAAoF,KAApF,EAA0F,YAA1F,EAAuG,MAAvG,EAA8G,KAA9G,EAAoH,KAApH,EAA0H,MAA1H,CAAb;;AACA,OAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,MAAM,CAACxB,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACtCiB,IAAAA,WAAW,CAACC,IAAZ,CAAiB;AACfC,MAAAA,GAAG,EAAGA,GAAG,CAACnB,CAAD,CADM;AAEfoB,MAAAA,GAAG,EAAGA,GAAG,CAACpB,CAAD,CAFM;AAGfqB,MAAAA,GAAG,EAAGA,GAAG,CAACrB,CAAD,CAHM;AAIfuB,MAAAA,OAAO,EAAGA,OAAO,CAACvB,CAAD,CAJF;AAKfwB,MAAAA,OAAO,EAAGA,OAAO,CAACxB,CAAD,CALF;AAMfyB,MAAAA,OAAO,EAAGA,OAAO,CAACzB,CAAD,CANF;AAOf0B,MAAAA,MAAM,EAAEA,MAAM,CAAC1B,CAAD;AAPC,KAAjB;AASD;;AACD,SAAOiB,WAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport SecCharts from './components/scan_charts'\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n  Divider\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n  Legend,\n  Tooltip,\n  BarChart,\n  Bar\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\nconst ClientChartData = getClientBurnData();\n\nlet PieChartData = [\n  { name: \"Internally Reported\", value: 0, color: \"warning\" },\n  { name: \"Customer Reported\", value: 0, color: \"primary\" },\n];\n\n\n\n\nexport default function QA_Dashboard(props) {\n// Setting constants for QA Data\nconst [closedIssues,setClosedIssues] = useState([])\nconst [openIssues,setOpenIssues] = useState([])\nconst [createdIssues,setCreatedIssues] = useState([])\nconst [changesIssues,setChangesIssues] = useState([])\nconst [janIssues,setJanIssues] = useState([])\nconst [febIssues,setFebIssues] = useState([])\nconst [cusReportBugs,setCusReportBugs] = useState([])\n\nlet COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error']\n\n\n  PieChartData[1].value = cusReportBugs.total_count\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count\n\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"overall\");\n  var [ClientChartState, setClientChartState] = useState(\"YTD\");\n\n  return (\n    <>\n      <PageTitle title=\"Security\"/>\n      <Grid container spacing={6}>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Audit\"\n            upperTitle\n            className={classes.card}\n          >\n          <Divider  />\n          <div>\n            <Typography>PCI DSS</Typography>\n            <Typography color=\"success\">Completed</Typography>\n            <Typography>Due: March 2021</Typography>\n            <br/>\n            <Typography>SOC2 Type II</Typography>\n            <Typography weight=\"bold\">In Progress</Typography>\n            <Typography>Due: June 2021</Typography>\n          </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Policy Status\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n          <Divider  />\n          <div>\n            <Typography>Data Classification</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n            <br/>\n\n            <Typography>Data Protection</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n            <br/>\n\n            <Typography>Password</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n            <br/>\n\n            <Typography>Disaster Recovery</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n            <br/>\n\n            <Typography>PCI</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n            <br/>\n\n            <Typography>SOC</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n            <br/>\n\n            <Typography>UAC</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          </Widget>\n          \n        </Grid>\n        \n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  MK System Vulnerability Stats\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                    Informational\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"success\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Low\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Medium\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"error\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      High\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"overall\">Overall</MenuItem>\n                  <MenuItem value=\"dashboard\">Dashboard</MenuItem>\n                  <MenuItem value=\"close\">CLOSE</MenuItem>\n                  <MenuItem value=\"store\">Store</MenuItem>\n                  <MenuItem value=\"checkout\">Checkout</MenuItem>\n                  <MenuItem value=\"customerPortal\">Customer Portal</MenuItem>\n\n                </Select>\n              </div>\n            }\n          >\n            {(mainChartState === \"overall\")?\n            // <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            //   <PieChart\n            //     margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n            //     data={mainChartData}\n            //   >\n            //     <Pie data={mainChartData} dataKey=\"stats\" nameKey=\"level\" label>\n            //     {\n                  \n            //       mainChartData.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n            //     }\n            //     </Pie>\n            //   </PieChart>\n            // </ResponsiveContainer>\n            <SecCharts chartState={mainChartState} stats={mainChartData.stats} level={mainChartData.level} color={COLORS} data={mainChartData} />\n            :             \n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ProductChartData}\n            >\n              <YAxis\n                ticks={[0, 5, 10, 15, 20, 25]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'product'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"Jan\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"Feb\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"Mar\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>}\n          </Widget>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Widget\n            title=\"Client Monthly Stats\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid> */}\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  System Update Tracker\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                <div className={classes.mainChartHeaderLabel}>\n                  <Typography className={classes.mainChartLegentElement}>\n                    Created vs Implemented\n                  </Typography>\n                </div>\n                </div>\n                <Select\n                  value={ClientChartState}\n                  onChange={e => setClientChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"YTD\">Issues</MenuItem>\n                  <MenuItem value=\"burn\">Burn Time</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            {(ClientChartState === \"YTD\")?\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ClientChartData}\n            >\n              <YAxis\n                ticks={[0, 15, 25, 35, 45]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'stores'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"Jan\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"Feb\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"Mar\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>\n            :             \n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ClientChartData}\n            >\n              <YAxis\n                ticks={[0, 25, 50, 75, 100,125, 150]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'stores'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"JanBurn\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"FebBurn\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"MarBurn\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>}\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var stats = [31.7,52.4,15.9,0];\n  let level = [\"Informational\",\"Low\",\"Medium\",\"High\"]\n  for (let i = 0; i < level.length; i++) {\n    resultArray.push({\n      stats: stats[i],\n      level: level[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getProductBurnData(){\n  var resultArray = [];\n  var Jan = [6.35,0,31.01,0,20.47,1.80];\n  var Feb = [1.15,5.83,3.74,0,18.07,3.21];\n  var Mar = [1.95,1.45,0,0,.17,0];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services']\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      Jan : Jan[i],\n      Feb : Feb[i],\n      Mar : Mar[i],\n      product: product[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getClientBurnData(){\n  var resultArray = [];\n  var Jan = [4,0,4,0,0,0,26,5,0,5,11,8,0];\n  var Feb = [7,2,8,2,1,0,43,3,5,5,5,1,0];\n  var Mar = [2,1,1,0,2,1,33,3,6,1,2,1,2];\n\n  var JanBurn = [4,0,6.79,0,0,0,51.72,17.36,0,8.93,27.66,9.86,0];\n  var FebBurn = [13.08,3.88,19.07,6.32,.18,0,147.66,7.76,17.29,9.30,15.07,4.59,0];\n  var MarBurn = [21.28,4.10,6.07,0,6.27,.17,147.67,11.77,8.33,4.68,7.75,1.02,5.13];\n\n  let stores = [\"AM Bank\", 'BBOW', 'BBOK', 'Beneficial', 'CSB New Castle', 'Equitable','Evergreen','FBA','Las Animas','ICBA','TCM','UBB','WaFd']\n  for (let i = 0; i < stores.length; i++) {\n    resultArray.push({\n      Jan : Jan[i],\n      Feb : Feb[i],\n      Mar : Mar[i],\n      JanBurn : JanBurn[i],\n      FebBurn : FebBurn[i],\n      MarBurn : MarBurn[i],\n      stores: stores[i]\n    });\n  }\n  return resultArray;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}