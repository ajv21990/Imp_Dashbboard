{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/security/Security_Dashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, Button, Divider } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis, Legend, Tooltip, BarChart, Bar } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\nconst ClientChartData = getClientBurnData();\nlet PieChartData = [{\n  name: \"Internally Reported\",\n  value: 0,\n  color: \"warning\"\n}, {\n  name: \"Customer Reported\",\n  value: 0,\n  color: \"primary\"\n}];\nexport default function QA_Dashboard(props) {\n  // Setting constants for QA Data\n  const [closedIssues, setClosedIssues] = useState([]);\n  const [openIssues, setOpenIssues] = useState([]);\n  const [createdIssues, setCreatedIssues] = useState([]);\n  const [changesIssues, setChangesIssues] = useState([]);\n  const [janIssues, setJanIssues] = useState([]);\n  const [febIssues, setFebIssues] = useState([]);\n  const [cusReportBugs, setCusReportBugs] = useState([]);\n  PieChartData[1].value = cusReportBugs.total_count;\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count;\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var [mainChartState, setMainChartState] = useState(\"engineer\");\n  var [ClientChartState, setClientChartState] = useState(\"YTD\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Security\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Audit\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"PCI DSS\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Due: March 2021\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"SOC2 Type II\"), /*#__PURE__*/React.createElement(Typography, {\n    weight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Due: June 2021\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Policy Status\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Data Classification\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Compliant\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Data Protection\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Compliant\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Compliant\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Disaster Recovery\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Compliant\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"PCI\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Compliant\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"SOC\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Compliant\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"UAC\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Compliant\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Bugs Detected This Year\",\n    upperTitle: true,\n    bodyClass: classes.fullHeightBody,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.visitsNumberContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"xl\",\n    weight: \"medium\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, janIssues.total_count + febIssues.total_count)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 100,\n    height: 30,\n    data: [{\n      value: janIssues.total_count\n    }, {\n      value: febIssues.total_count\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"Defect Burn Time (hours)\"), mainChartState === \"engineer\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, \"Fulfillment\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"Dev\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, \"Product\"))), /*#__PURE__*/React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"engineer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, \"Engineer\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, \"Product\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, mainChartState === \"engineer\" ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 75, 150, 225],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"month\",\n    tickFormatter: i => i + \" 21\",\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"Dev\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: {\n      strokeWidth: 2,\n      fill: theme.palette.warning.dark\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"Fulfillment\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ProductChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 5, 10, 15, 20, 25],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"product\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Jan\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Feb\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Mar\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, \"Client Defect Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    }, \"Issues vs Burn Time\"))), /*#__PURE__*/React.createElement(Select, {\n      value: ClientChartState,\n      onChange: e => setClientChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"YTD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, \"Issues\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"burn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 19\n      }\n    }, \"Burn Time\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, ClientChartState === \"YTD\" ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ClientChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 15, 25, 35, 45],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"stores\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Jan\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Feb\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Mar\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ClientChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 25, 50, 75, 100, 125, 150],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"stores\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"JanBurn\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"FebBurn\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"MarBurn\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  })))))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var Fulfillment = [69.43, 67.51, 76.34];\n  var Dev = [80.75, 164, 156.63];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov', 'Dec'];\n\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Fulfillment: Fulfillment[i],\n      Dev: Dev[i],\n      month: month[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getProductBurnData() {\n  var resultArray = [];\n  var Jan = [6.35, 0, 31.01, 0, 20.47, 1.80];\n  var Feb = [1.15, 5.83, 3.74, 0, 18.07, 3.21];\n  var Mar = [1.95, 1.45, 0, 0, .17, 0];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services'];\n\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      Jan: Jan[i],\n      Feb: Feb[i],\n      Mar: Mar[i],\n      product: product[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getClientBurnData() {\n  var resultArray = [];\n  var Jan = [4, 0, 4, 0, 0, 0, 26, 5, 0, 5, 11, 8, 0];\n  var Feb = [7, 2, 8, 2, 1, 0, 43, 3, 5, 5, 5, 1, 0];\n  var Mar = [2, 1, 1, 0, 2, 1, 33, 3, 6, 1, 2, 1, 2];\n  var JanBurn = [4, 0, 6.79, 0, 0, 0, 51.72, 17.36, 0, 8.93, 27.66, 9.86, 0];\n  var FebBurn = [13.08, 3.88, 19.07, 6.32, .18, 0, 147.66, 7.76, 17.29, 9.30, 15.07, 4.59, 0];\n  var MarBurn = [21.28, 4.10, 6.07, 0, 6.27, .17, 147.67, 11.77, 8.33, 4.68, 7.75, 1.02, 5.13];\n  let stores = [\"AM Bank\", 'BBOW', 'BBOK', 'Beneficial', 'CSB New Castle', 'Equitable', 'Evergreen', 'FBA', 'Las Animas', 'ICBA', 'TCM', 'UBB', 'WaFd'];\n\n  for (let i = 0; i < stores.length; i++) {\n    resultArray.push({\n      Jan: Jan[i],\n      Feb: Feb[i],\n      Mar: Mar[i],\n      JanBurn: JanBurn[i],\n      FebBurn: FebBurn[i],\n      MarBurn: MarBurn[i],\n      stores: stores[i]\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/security/Security_Dashboard.js"],"names":["React","useEffect","useState","axios","Grid","LinearProgress","Select","OutlinedInput","MenuItem","Button","Divider","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","Legend","Tooltip","BarChart","Bar","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","ProductChartData","getProductBurnData","ClientChartData","getClientBurnData","PieChartData","name","value","color","QA_Dashboard","props","closedIssues","setClosedIssues","openIssues","setOpenIssues","createdIssues","setCreatedIssues","changesIssues","setChangesIssues","janIssues","setJanIssues","febIssues","setFebIssues","cusReportBugs","setCusReportBugs","total_count","classes","theme","mainChartState","setMainChartState","ClientChartState","setClientChartState","card","fullHeightBody","visitsNumberContainer","palette","primary","main","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","left","bottom","fill","text","fontSize","i","strokeWidth","warning","dark","stroke","getRandomData","length","min","max","multiplier","maxDiff","array","Array","lastValue","map","item","index","randomValue","Math","floor","random","resultArray","Fulfillment","Dev","month","push","Jan","Feb","Mar","product","JanBurn","FebBurn","MarBurn","stores"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\n\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n  Divider\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n  Legend,\n  Tooltip,\n  BarChart,\n  Bar\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\nconst ClientChartData = getClientBurnData();\n\nlet PieChartData = [\n  { name: \"Internally Reported\", value: 0, color: \"warning\" },\n  { name: \"Customer Reported\", value: 0, color: \"primary\" },\n];\n\n\n\nexport default function QA_Dashboard(props) {\n// Setting constants for QA Data\nconst [closedIssues,setClosedIssues] = useState([])\nconst [openIssues,setOpenIssues] = useState([])\nconst [createdIssues,setCreatedIssues] = useState([])\nconst [changesIssues,setChangesIssues] = useState([])\nconst [janIssues,setJanIssues] = useState([])\nconst [febIssues,setFebIssues] = useState([])\nconst [cusReportBugs,setCusReportBugs] = useState([])\n\n\n\n  PieChartData[1].value = cusReportBugs.total_count\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count\n\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"engineer\");\n  var [ClientChartState, setClientChartState] = useState(\"YTD\");\n\n  return (\n    <>\n      <PageTitle title=\"Security\"/>\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Audit\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n          <Divider  />\n          <div>\n            <Typography>PCI DSS</Typography>\n            <Typography color=\"success\">Completed</Typography>\n            <Typography>Due: March 2021</Typography>\n\n          </div>\n          <div>\n            <Typography>SOC2 Type II</Typography>\n            <Typography weight=\"bold\">In Progress</Typography>\n            <Typography>Due: June 2021</Typography>\n          </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Policy Status\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n          <Divider  />\n          <div>\n            <Typography>Data Classification</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          <div>\n            <Typography>Data Protection</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          <div>\n            <Typography>Password</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          <div>\n            <Typography>Disaster Recovery</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          <div>\n            <Typography>PCI</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          <div>\n            <Typography>SOC</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          <div>\n            <Typography>UAC</Typography>\n            <Typography color=\"success\">Compliant</Typography>\n          </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Bugs Detected This Year\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                {janIssues.total_count + febIssues.total_count}\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: janIssues.total_count },\n                  { value: febIssues.total_count },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Defect Burn Time (hours)\n                </Typography>\n                {(mainChartState === \"engineer\")?\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                    Fulfillment\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Dev\n                    </Typography>\n                  </div>\n                </div>:\n                <div className={classes.mainChartHeaderLabels}>\n                <div className={classes.mainChartHeaderLabel}>\n                  <Typography className={classes.mainChartLegentElement}>\n                    Product\n                  </Typography>\n                </div>\n                </div>}\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"engineer\">Engineer</MenuItem>\n                  {/* <MenuItem value=\"weekly\">Client</MenuItem> */}\n                  <MenuItem value=\"product\">Product</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            {(mainChartState === \"engineer\")?\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 75, 150, 225]}\n                  tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.primary + \"80\"}\n                />\n                <XAxis\n                dataKey = 'month'\n                  tickFormatter={i => i+\" 21\"}\n                  tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.primary + \"80\"}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"Dev\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={{\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.dark,\n                  }}                  \n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"Fulfillment\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n                <Tooltip />\n              </ComposedChart>\n            </ResponsiveContainer>\n            :             \n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ProductChartData}\n            >\n              <YAxis\n                ticks={[0, 5, 10, 15, 20, 25]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'product'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"Jan\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"Feb\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"Mar\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>}\n          </Widget>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Widget\n            title=\"Client Monthly Stats\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid> */}\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Client Defect Tracker\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                <div className={classes.mainChartHeaderLabel}>\n                  <Typography className={classes.mainChartLegentElement}>\n                    Issues vs Burn Time\n                  </Typography>\n                </div>\n                </div>\n                <Select\n                  value={ClientChartState}\n                  onChange={e => setClientChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"YTD\">Issues</MenuItem>\n                  <MenuItem value=\"burn\">Burn Time</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            {(ClientChartState === \"YTD\")?\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ClientChartData}\n            >\n              <YAxis\n                ticks={[0, 15, 25, 35, 45]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'stores'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"Jan\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"Feb\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"Mar\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>\n            :             \n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ClientChartData}\n            >\n              <YAxis\n                ticks={[0, 25, 50, 75, 100,125, 150]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'stores'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"JanBurn\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"FebBurn\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"MarBurn\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>}\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var Fulfillment = [69.43,67.51,76.34];\n  var Dev = [80.75,164,156.63];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov','Dec']\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Fulfillment: Fulfillment[i],\n      Dev: Dev[i],\n      month: month[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getProductBurnData(){\n  var resultArray = [];\n  var Jan = [6.35,0,31.01,0,20.47,1.80];\n  var Feb = [1.15,5.83,3.74,0,18.07,3.21];\n  var Mar = [1.95,1.45,0,0,.17,0];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services']\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      Jan : Jan[i],\n      Feb : Feb[i],\n      Mar : Mar[i],\n      product: product[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getClientBurnData(){\n  var resultArray = [];\n  var Jan = [4,0,4,0,0,0,26,5,0,5,11,8,0];\n  var Feb = [7,2,8,2,1,0,43,3,5,5,5,1,0];\n  var Mar = [2,1,1,0,2,1,33,3,6,1,2,1,2];\n\n  var JanBurn = [4,0,6.79,0,0,0,51.72,17.36,0,8.93,27.66,9.86,0];\n  var FebBurn = [13.08,3.88,19.07,6.32,.18,0,147.66,7.76,17.29,9.30,15.07,4.59,0];\n  var MarBurn = [21.28,4.10,6.07,0,6.27,.17,147.67,11.77,8.33,4.68,7.75,1.02,5.13];\n\n  let stores = [\"AM Bank\", 'BBOW', 'BBOK', 'Beneficial', 'CSB New Castle', 'Equitable','Evergreen','FBA','Las Animas','ICBA','TCM','UBB','WaFd']\n  for (let i = 0; i < stores.length; i++) {\n    resultArray.push({\n      Jan : Jan[i],\n      Feb : Feb[i],\n      Mar : Mar[i],\n      JanBurn : JanBurn[i],\n      FebBurn : FebBurn[i],\n      MarBurn : MarBurn[i],\n      stores: stores[i]\n    });\n  }\n  return resultArray;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}