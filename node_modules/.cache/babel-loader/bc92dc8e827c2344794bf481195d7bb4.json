{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/Test_Cases_Service.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport SecCharts from './components/scan_charts';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, Button, Divider, Input } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis, Legend, Tooltip, BarChart, Bar } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst systemUpdateData = getSystemUpdateData();\nexport default function Test_Cases_Service(props) {\n  let COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error'];\n  var classes = useStyles();\n  var theme = useTheme(); // Defining local variables and states\n\n  let creditIntegrations = [\"Experian\", \"TransUnion\", \"Equifax\"];\n  let creditScore = [\"High\", \"Medium\", \"Low\"];\n  let stores = [\"Biz Alpha\", \"BBOW Alpha\", \"BBOK Alpha\"];\n  let testProfiles = [mock.testCaseExp, mock.testCaseTU, mock.testCaseEq];\n  let products = '';\n  console.log(testProfilesState);\n  var [integrationState, setIntegrationState] = useState(creditIntegrations);\n  var [creditScoreState, setCreditScoreState] = useState(creditScore);\n  var [storeState, setStoreState] = useState(stores);\n  var [testProfilesState, settestProfilesState] = useState(testProfiles);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Test Case Service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"credit-integration-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Credit Integration\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: integrationState,\n    onChange: e => setIntegrationState(e.target.value),\n    inputProps: {\n      name: 'credit-integration',\n      id: 'credit-integration-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditIntegrations[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, creditIntegrations[0]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditIntegrations[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, creditIntegrations[1]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditIntegrations[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, creditIntegrations[2])), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"credit-score-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Credit Score\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: creditScoreState,\n    onChange: e => setCreditScoreState(e.target.value),\n    inputProps: {\n      name: 'credit-score',\n      id: 'credit-score-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditScore[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, creditScore[0]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditScore[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, creditScore[1]), /*#__PURE__*/React.createElement(\"option\", {\n    value: creditScore[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, creditScore[2])), integrationState === \"Experian\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"exp-test-cases-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, \"Test Cases\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: testProfilesState,\n    onChange: e => settestProfilesState(e.target.value),\n    inputProps: {\n      name: 'exp-test-cases',\n      id: 'exp-test-cases-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: testProfilesState[0][0].name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, testProfilesState[0][0].name), /*#__PURE__*/React.createElement(\"option\", {\n    value: testProfilesState[0][1].name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, testProfilesState[0][1].name))) : null));\n} // ##############################Functions to grab Data#########################################\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var stats = [31.7, 52.4, 15.9, 0];\n  let level = [\"Informational\", \"Low\", \"Medium\", \"High\"];\n\n  for (let i = 0; i < level.length; i++) {\n    resultArray.push({\n      stats: stats[i],\n      level: level[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getSystemUpdateData() {\n  var resultArray = [];\n  var Created = [58, 45, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  var Implemented = [55, 39, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov', 'Dec'];\n\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Created: Created[i],\n      Implemented: Implemented[i],\n      month: month[i]\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/Test_Cases_Service.js"],"names":["React","useEffect","useState","axios","SecCharts","InputLabel","Grid","LinearProgress","Select","OutlinedInput","MenuItem","Button","Divider","Input","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","Legend","Tooltip","BarChart","Bar","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","systemUpdateData","getSystemUpdateData","Test_Cases_Service","props","COLORS","classes","theme","creditIntegrations","creditScore","stores","testProfiles","testCaseExp","testCaseTU","testCaseEq","products","console","log","testProfilesState","integrationState","setIntegrationState","creditScoreState","setCreditScoreState","storeState","setStoreState","settestProfilesState","e","target","value","name","id","resultArray","stats","level","i","length","push","Created","Implemented","month"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport SecCharts from './components/scan_charts'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n  Divider,\n  Input\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n  Legend,\n  Tooltip,\n  BarChart,\n  Bar\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst systemUpdateData = getSystemUpdateData();\n \n\nexport default function Test_Cases_Service(props) {\nlet COLORS = ['#1096CB', '#3CD4A0', '#000000', 'error']\nvar classes = useStyles();\nvar theme = useTheme();\n\n\n  // Defining local variables and states\n  let creditIntegrations = [\"Experian\",\"TransUnion\",\"Equifax\"]\n  let creditScore = [\"High\",\"Medium\",\"Low\"]\n  let stores = [\"Biz Alpha\", \"BBOW Alpha\", \"BBOK Alpha\"]\n  let testProfiles = [mock.testCaseExp, mock.testCaseTU, mock.testCaseEq]\n  let products = ''\nconsole.log(testProfilesState)\n  var [integrationState, setIntegrationState] = useState(creditIntegrations);\n  var [creditScoreState, setCreditScoreState] = useState(creditScore);\n  var [storeState, setStoreState] = useState(stores);\n  var [testProfilesState, settestProfilesState] = useState(testProfiles);\n\n  return (\n    <>\n      <PageTitle title=\"Test Case Service\"/>\n      <div>\n      <InputLabel htmlFor=\"credit-integration-native-simple\">Credit Integration</InputLabel>\n        <Select\n          native\n          value={integrationState}\n          onChange={e => setIntegrationState(e.target.value)}\n          inputProps={{\n            name: 'credit-integration',\n            id: 'credit-integration-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={creditIntegrations[0]}>{creditIntegrations[0]}</option>\n          <option value={creditIntegrations[1]}>{creditIntegrations[1]}</option>\n          <option value={creditIntegrations[2]}>{creditIntegrations[2]}</option>\n        </Select>\n        <br/>\n        <br/>\n        <InputLabel htmlFor=\"credit-score-native-simple\">Credit Score</InputLabel>\n        <Select\n          native\n          value={creditScoreState}\n          onChange={e => setCreditScoreState(e.target.value)}\n          inputProps={{\n            name: 'credit-score',\n            id: 'credit-score-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={creditScore[0]}>{creditScore[0]}</option>\n          <option value={creditScore[1]}>{creditScore[1]}</option>\n          <option value={creditScore[2]}>{creditScore[2]}</option>\n        </Select>\n        {integrationState === \"Experian\" ? (\n    <div>\n    <InputLabel htmlFor=\"exp-test-cases-native-simple\">Test Cases</InputLabel>\n    <Select \n    native\n    value={testProfilesState} \n    onChange={e => settestProfilesState(e.target.value)}\n    inputProps={{\n      name: 'exp-test-cases',\n      id: 'exp-test-cases-native-simple',\n    }}\n>\n      <option aria-label=\"None\" value=\"\" />\n      <option value={testProfilesState[0][0].name}>{testProfilesState[0][0].name}</option>\n      <option value={testProfilesState[0][1].name}>{testProfilesState[0][1].name}</option>\n    </Select>\n    </div>\n) : null}\n\n      </div>\n    </>\n  );\n}\n\n// ##############################Functions to grab Data#########################################\nfunction getMainChartData() {\n  var resultArray = [];\n  var stats = [31.7,52.4,15.9,0];\n  let level = [\"Informational\",\"Low\",\"Medium\",\"High\"]\n  for (let i = 0; i < level.length; i++) {\n    resultArray.push({\n      stats: stats[i],\n      level: level[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getSystemUpdateData() {\n  var resultArray = [];\n  var Created = [58,45,39,0,0,0,0,0,0,0,0,0];\n  var Implemented = [55,39,42,0,0,0,0,0,0,0,0,0];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov','Dec']\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Created: Created[i],\n      Implemented: Implemented[i],\n      month: month[i]\n    });\n  }\n  return resultArray;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}