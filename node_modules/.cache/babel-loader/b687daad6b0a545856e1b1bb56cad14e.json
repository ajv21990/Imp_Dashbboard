{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/qa/QA_Dashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, Button } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis, Legend, Tooltip, BarChart } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\nlet PieChartData = [{\n  name: \"Internally Reported\",\n  value: 0,\n  color: \"warning\"\n}, {\n  name: \"Customer Reported\",\n  value: 0,\n  color: \"primary\"\n}];\nexport default function QA_Dashboard(props) {\n  // Setting constants for QA Data\n  const [closedIssues, setClosedIssues] = useState([]);\n  const [openIssues, setOpenIssues] = useState([]);\n  const [createdIssues, setCreatedIssues] = useState([]);\n  const [changesIssues, setChangesIssues] = useState([]);\n  const [janIssues, setJanIssues] = useState([]);\n  const [febIssues, setFebIssues] = useState([]);\n  const [cusReportBugs, setCusReportBugs] = useState([]); // Hooks to grab data\n  // useEffect(() => {\n  //   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=115&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n  //   .then( res => res.json())\n  //   .then(\n  //     (result) => {\n  //       setClosedIssues(result)\n  //     },\n  //     (error) =>{\n  //       console.log(error)\n  //     }\n  //   )\n  // },[])\n  // useEffect(() => {\n  //   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=118&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n  //   .then( res => res.json())\n  //   .then(\n  //     (result) => {\n  //       setOpenIssues(result)\n  //     },\n  //     (error) =>{\n  //       console.log(error)\n  //     }\n  //   )\n  // },[])\n  // useEffect(() => {\n  //   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=117&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n  //   .then( res => res.json())\n  //   .then(\n  //     (result) => {\n  //       setCreatedIssues(result)\n  //     },\n  //     (error) =>{\n  //       console.log(error)\n  //     }\n  //   )\n  // },[])\n  // useEffect(() => {\n  //   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=125&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n  //   .then( res => res.json())\n  //   .then(\n  //     (result) => {\n  //       setChangesIssues(result)\n  //     },\n  //     (error) =>{\n  //       console.log(error)\n  //     }\n  //   )\n  // },[])\n  //   useEffect(() => {\n  //       fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=126&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n  //       .then( res => res.json())\n  //       .then(\n  //         (result) => {\n  //           setJanIssues(result)\n  //         },\n  //         (error) =>{\n  //           console.log(error)\n  //         }\n  //       )\n  //     },[])\n  //     useEffect(() => {\n  //       fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=127&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n  //       .then( res => res.json())\n  //       .then(\n  //         (result) => {\n  //           setFebIssues(result)\n  //         },\n  //         (error) =>{\n  //           console.log(error)\n  //         }\n  //       )\n  //     },[])\n  //     useEffect(() => {\n  //       fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=119&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n  //       .then( res => res.json())\n  //       .then(\n  //         (result) => {\n  //           setCusReportBugs(result)\n  //         },\n  //         (error) =>{\n  //           console.log(error)\n  //         }\n  //       )\n  //     },[])\n\n  PieChartData[1].value = cusReportBugs.total_count;\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count;\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var [mainChartState, setMainChartState] = useState(\"engineer\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"QA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"This Month's Bugs Detected\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.performanceLegendWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Created\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"Closed\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Open\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: createdIssues.total_count,\n    classes: {\n      barColorPrimary: classes.progressBarSuccess\n    },\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Closed\"), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: closedIssues.total_count,\n    classes: {\n      barColorPrimary: classes.progressBarPrimary\n    },\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"Open\"), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: openIssues.total_count,\n    classes: {\n      barColorPrimary: classes.progressBarWarning\n    },\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, createdIssues.total_count)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, \"Closed\"), /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, closedIssues.total_count)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, \"Open\"), /*#__PURE__*/React.createElement(Typography, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, openIssues.total_count))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Issue Breakdown\",\n    upperTitle: true,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 144,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: PieChartData,\n    innerRadius: 30,\n    outerRadius: 40,\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, PieChartData.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: theme.palette[entry.color].main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pieChartLegendWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, PieChartData.map(({\n    name,\n    value,\n    color\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: color,\n    className: classes.legendItemContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      whiteSpace: \"nowrap\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 23\n    }\n  }, \"\\xA0\", name, \"\\xA0\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 23\n    }\n  }, \"\\xA0\", value)))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Bugs Detected This Year\",\n    upperTitle: true,\n    bodyClass: classes.fullHeightBody,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.visitsNumberContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"xl\",\n    weight: \"medium\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  }, janIssues.total_count + febIssues.total_count)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 100,\n    height: 30,\n    data: [{\n      value: janIssues.total_count\n    }, {\n      value: febIssues.total_count\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }, \"Defect Burn Time\"), mainChartState === \"engineer\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }, \"QA\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }, \"Dev\"))) : \"\", /*#__PURE__*/React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"engineer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }, \"Engineer\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 19\n      }\n    }, \"Product\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, mainChartState === \"engineer\" ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 75, 150, 225],\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"month\",\n    tickFormatter: i => i + \" 21\",\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"Dev\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: {\n      strokeWidth: 2,\n      fill: theme.palette.warning.dark\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"QA\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ProductChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 75, 150, 225],\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"month\",\n    tickFormatter: i => i + \" 21\",\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"Dev\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: {\n      strokeWidth: 2,\n      fill: theme.palette.warning.dark\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"QA\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Client Monthly Stats\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    data: mock.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Bugs per Product\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    data: mock.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  })))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var QA = [69.43, 67.51, 76.34];\n  var Dev = [80.75, 164, 156.63];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov', 'Dec'];\n\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      QA: QA[i],\n      Dev: Dev[i],\n      month: month[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getProductBurnData() {\n  var resultArray = [];\n  var QA = [69.43, 67.51, 76.34];\n  var Dev = [80.75, 164, 156.63];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services'];\n\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      QA: QA[i],\n      Dev: Dev[i],\n      product: product[i]\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/qa/QA_Dashboard.js"],"names":["React","useEffect","useState","axios","Grid","LinearProgress","Select","OutlinedInput","MenuItem","Button","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","Legend","Tooltip","BarChart","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","ProductChartData","getProductBurnData","PieChartData","name","value","color","QA_Dashboard","props","closedIssues","setClosedIssues","openIssues","setOpenIssues","createdIssues","setCreatedIssues","changesIssues","setChangesIssues","janIssues","setJanIssues","febIssues","setFebIssues","cusReportBugs","setCusReportBugs","total_count","classes","theme","mainChartState","setMainChartState","card","fullHeightBody","performanceLegendWrapper","legendElement","legendElementText","progressSection","progressSectionTitle","barColorPrimary","progressBarSuccess","progress","progressBarPrimary","progressBarWarning","map","entry","index","palette","main","pieChartLegendWrapper","legendItemContainer","whiteSpace","fontSize","visitsNumberContainer","primary","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","left","bottom","fill","text","hint","i","strokeWidth","warning","dark","stroke","tableWidget","table","getRandomData","length","min","max","multiplier","maxDiff","array","Array","lastValue","item","randomValue","Math","floor","random","resultArray","QA","Dev","month","push","product"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\n\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n  Legend,\n  Tooltip,\n  BarChart\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\n\nlet PieChartData = [\n  { name: \"Internally Reported\", value: 0, color: \"warning\" },\n  { name: \"Customer Reported\", value: 0, color: \"primary\" },\n];\n\n\n\nexport default function QA_Dashboard(props) {\n// Setting constants for QA Data\nconst [closedIssues,setClosedIssues] = useState([])\nconst [openIssues,setOpenIssues] = useState([])\nconst [createdIssues,setCreatedIssues] = useState([])\nconst [changesIssues,setChangesIssues] = useState([])\nconst [janIssues,setJanIssues] = useState([])\nconst [febIssues,setFebIssues] = useState([])\nconst [cusReportBugs,setCusReportBugs] = useState([])\n\n\n\n\n// Hooks to grab data\n// useEffect(() => {\n//   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=115&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n//   .then( res => res.json())\n//   .then(\n//     (result) => {\n//       setClosedIssues(result)\n//     },\n//     (error) =>{\n//       console.log(error)\n//     }\n//   )\n// },[])\n\n// useEffect(() => {\n//   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=118&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n//   .then( res => res.json())\n//   .then(\n//     (result) => {\n//       setOpenIssues(result)\n//     },\n//     (error) =>{\n//       console.log(error)\n//     }\n//   )\n// },[])\n\n// useEffect(() => {\n//   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=117&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n//   .then( res => res.json())\n//   .then(\n//     (result) => {\n//       setCreatedIssues(result)\n//     },\n//     (error) =>{\n//       console.log(error)\n//     }\n//   )\n// },[])\n\n// useEffect(() => {\n//   fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=125&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n//   .then( res => res.json())\n//   .then(\n//     (result) => {\n//       setChangesIssues(result)\n//     },\n//     (error) =>{\n//       console.log(error)\n//     }\n//   )\n// },[])\n\n//   useEffect(() => {\n//       fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=126&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n//       .then( res => res.json())\n//       .then(\n//         (result) => {\n//           setJanIssues(result)\n//         },\n//         (error) =>{\n//           console.log(error)\n//         }\n//       )\n//     },[])\n\n//     useEffect(() => {\n//       fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=127&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n//       .then( res => res.json())\n//       .then(\n//         (result) => {\n//           setFebIssues(result)\n//         },\n//         (error) =>{\n//           console.log(error)\n//         }\n//       )\n//     },[])\n\n//     useEffect(() => {\n//       fetch(\"https://cors-anywhere.herokuapp.com/https://project.mkdecision.com/issues.json?query_id=119&key=9a10d4bc69e91eb6e3fc37ba251f6244dbec50ef\")\n//       .then( res => res.json())\n//       .then(\n//         (result) => {\n//           setCusReportBugs(result)\n//         },\n//         (error) =>{\n//           console.log(error)\n//         }\n//       )\n//     },[])\n\n\n  PieChartData[1].value = cusReportBugs.total_count\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count\n\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"engineer\");\n  return (\n    <>\n      <PageTitle title=\"QA\"/>\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"This Month's Bugs Detected\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n            <div className={classes.legendElement}>\n                <Dot color=\"success\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Created\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Closed\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Open\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Created\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={createdIssues.total_count}\n                classes={{ barColorPrimary: classes.progressBarSuccess }}\n                className={classes.progress}\n              />\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Closed\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={closedIssues.total_count}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Open\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={openIssues.total_count}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n            <br/>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Created\n                </Typography>\n                <Typography size=\"md\">{createdIssues.total_count}</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Closed\n                </Typography>\n                <Typography size=\"md\">{closedIssues.total_count}</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Open\n                </Typography>\n                <Typography size=\"md\">{openIssues.total_count}</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Issue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Bugs Detected This Year\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                {janIssues.total_count + febIssues.total_count}\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: janIssues.total_count },\n                  { value: febIssues.total_count },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Defect Burn Time\n                </Typography>\n                {(mainChartState === \"engineer\")?\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      QA\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Dev\n                    </Typography>\n                  </div>\n                </div>:\"\"}\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"engineer\">Engineer</MenuItem>\n                  {/* <MenuItem value=\"weekly\">Client</MenuItem> */}\n                  <MenuItem value=\"product\">Product</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            {(mainChartState === \"engineer\")?\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 75, 150, 225]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                />\n                <XAxis\n                dataKey = 'month'\n                  tickFormatter={i => i+\" 21\"}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"Dev\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={{\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.dark,\n                  }}                  \n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"QA\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n                <Tooltip />\n              </ComposedChart>\n            </ResponsiveContainer>\n            :             \n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ProductChartData}\n            >\n              <YAxis\n                ticks={[0, 75, 150, 225]}\n                tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.hint + \"80\"}\n              />\n              <XAxis\n              dataKey = 'month'\n                tickFormatter={i => i+\" 21\"}\n                tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.hint + \"80\"}\n              />\n              <Line\n                type=\"linear\"\n                dataKey=\"Dev\"\n                stroke={theme.palette.primary.main}\n                strokeWidth={2}\n                dot={{\n                  strokeWidth: 2,\n                  fill: theme.palette.warning.dark,\n                }}                  \n              />\n              <Line\n                type=\"linear\"\n                dataKey=\"QA\"\n                stroke={theme.palette.warning.main}\n                strokeWidth={2}\n                dot={{\n                  stroke: theme.palette.warning.dark,\n                  strokeWidth: 2,\n                  fill: theme.palette.warning.main,\n                }}\n              />\n              <Tooltip />\n            </BarChart>\n          </ResponsiveContainer>}\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            title=\"Client Monthly Stats\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            title=\"Bugs per Product\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var QA = [69.43,67.51,76.34];\n  var Dev = [80.75,164,156.63];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov','Dec']\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      QA: QA[i],\n      Dev: Dev[i],\n      month: month[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getProductBurnData(){\n  var resultArray = [];\n  var QA = [69.43,67.51,76.34];\n  var Dev = [80.75,164,156.63];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services']\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      QA: QA[i],\n      Dev: Dev[i],\n      product: product[i]\n    });\n  }\n  return resultArray;\n}\n"]},"metadata":{},"sourceType":"module"}