{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/components/consumerDropdown.js\";\nimport React from \"react\";\nimport { Select, Card, CardContent, Button } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst ConsumerDropdown = props => {\n  function getPostmanRequest(store, name, product) {\n    console.log(store); //Declaring copy JSON request function\n\n    function copyPostmanRequest() {\n      /* Get the text field */\n      var copyText = document.getElementById(\"postmanURLRequest\").innerText.toString();\n      var dummy = document.createElement(\"input\");\n      document.body.appendChild(dummy);\n      dummy.setAttribute('value', copyText);\n      dummy.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(dummy);\n      /* Alert the copied text */\n\n      alert(\"URL copied to clipboard\");\n    }\n\n    function copyPostmanURL() {\n      /* Get the text field */\n      var copyText = document.getElementById(\"postmanRequest\").innerText.toString();\n      var dummy = document.createElement(\"input\");\n      document.body.appendChild(dummy);\n      dummy.setAttribute('value', copyText);\n      dummy.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(dummy);\n      /* Alert the copied text */\n\n      alert(\"Object copied to clipboard\");\n    }\n\n    let firstName = '';\n    let middleName = '';\n    let lastName = ''; //Assigning personal information based on test case\n\n    let address = \"\";\n    let ssn = '';\n    let city = '';\n    let state = '';\n    let zip = '';\n    let dob = '';\n    let phone = '';\n    let requestURL = \"\";\n    let storeID = \"\";\n\n    switch (store) {\n      case \"Biz Alpha\":\n        requestURL = \"https://biz.alpha.mkdecision.com/ccos/submit-credit-application\";\n        storeID = \"MkCreditCards\";\n        break;\n\n      case \"BBOW\":\n        storeID = \"BankersBank\";\n        requestURL = \"https://bankersbank.close.alpha.mkdecision.com/ccos/submit-credit-application\";\n        break;\n\n      case \"BBOK\":\n        storeID = \"bbok-demo\";\n        requestURL = \"https://bbok.close.alpha.mkdecision.com/ccos/submit-credit-application\";\n        break;\n\n      case \"TCM\":\n        storeID = \"300265\";\n        requestURL = \"https://tcmbank.close.alpha.mkdecision.com/ccos/submit-credit-application\";\n        break;\n\n      case \"Demo\":\n        storeID = \"MkCreditCardsDemo\";\n        requestURL = \"https://demo.close.mkdecision.com/ccos/submit-credit-application\";\n        break;\n    }\n\n    switch (name) {\n      case \"SANDRA BUSTAMENTE\":\n        address = \"3320 MIDDLE BELLVILLE RD\";\n        city = 'LEXINGTON';\n        state = 'USA_OH';\n        zip = '44904';\n        dob = '1969-01-26';\n        ssn = '666696264';\n        phone = '4197563447';\n        firstName = \"SANDRA\";\n        middleName = '';\n        lastName = 'BUSTAMENTE';\n        break;\n\n      case \"DONALD MADERA\":\n        address = \"4212 ALABAMA AVE\";\n        city = 'KENNER';\n        state = 'USA_LA';\n        zip = '70065';\n        dob = '1916-01-21';\n        ssn = '666523068';\n        phone = '5044662001';\n        firstName = \"DONALD\";\n        middleName = '';\n        lastName = 'MADERA';\n        break;\n\n      case \"ALAN HARGIS\":\n        address = \"2274 FARNWORTH ST\";\n        city = 'CAMARILLO';\n        state = 'USA_CA';\n        zip = '93010';\n        dob = '1946-01-02';\n        ssn = '666541587';\n        phone = '5554448441';\n        firstName = \"ALAN\";\n        middleName = '';\n        lastName = 'HARGIS';\n        break;\n\n      case \"MARIA STEPHENS\":\n        address = \"111 E SCHIRMER ST\";\n        city = 'SAINT LOUIS';\n        state = 'USA_MO';\n        zip = '63111';\n        dob = '1935-03-20';\n        ssn = '666550773';\n        phone = '2815477898';\n        firstName = \"MARIA\";\n        middleName = '';\n        lastName = 'STEPHENS';\n        break;\n\n      case \"DAVID BUI\":\n        address = \"6441 KEATS AVE S\";\n        city = 'COTTAGE GROVE';\n        state = 'USA_MO';\n        zip = '63111';\n        dob = '1935-03-20';\n        ssn = '666550773';\n        phone = '2815477898';\n        firstName = \"DAVID\";\n        middleName = '';\n        lastName = 'BUI';\n        break;\n\n      case \"MINERVA TURNER\":\n        address = \"10385 S SUMMIT PEAK PL\";\n        city = 'TUCSON';\n        state = 'USA_AZ';\n        zip = '85706';\n        dob = '1956-07-07';\n        ssn = '666030873';\n        phone = '5208078680';\n        firstName = \"MINERVA\";\n        middleName = '';\n        lastName = 'TURNER';\n        break;\n\n      case \"FLORENCIA ERIKA\":\n        address = \"PO BOX 327\";\n        city = 'SIERRA BLANCA';\n        state = 'USA_TX';\n        zip = '79851';\n        dob = '1964-1208';\n        ssn = '666345030';\n        phone = '9153691679';\n        firstName = \"FLORENCIA\";\n        middleName = '';\n        lastName = 'ERIKA';\n        break;\n\n      case \"DALTON VAN LEER\":\n        address = \"6088 S 2075 E\";\n        city = 'SALT LAKE CITY';\n        state = 'USA_UT';\n        zip = '84121';\n        dob = '1972-05-27';\n        ssn = '666231354';\n        phone = '8018085292';\n        firstName = \"DALTON\";\n        middleName = '';\n        lastName = 'VAN LEER';\n        break;\n\n      case \"DHINU DURRELL\":\n        address = \"4101 DRIPPING SPRINGS RD\";\n        city = 'GLASGOW';\n        state = 'USA_KY';\n        zip = '42141';\n        dob = '1962-04-21';\n        ssn = '666415182';\n        phone = '2707833151';\n        firstName = \"DHINU\";\n        middleName = '';\n        lastName = 'DURRELL';\n        break;\n\n      case \"JOHNETTA S GUALTNEY\":\n        address = \"4757 W PK\";\n        city = 'PLANO';\n        state = 'USA_TX';\n        zip = '75093';\n        dob = '1990-08-08';\n        ssn = '666348518';\n        phone = '7148894502';\n        firstName = \"JOHNETTA\";\n        middleName = 'S';\n        lastName = 'GUALTNEY';\n        break;\n\n      case \"BILLY C ALLEN\":\n        address = \"2508 SEEDLING GROVE CT\";\n        city = 'VIRGINIA BEACH';\n        state = 'USA_VA';\n        zip = '23456';\n        dob = '1978-03-20';\n        ssn = '666221475';\n        phone = '3632621457';\n        firstName = \"BILLY\";\n        middleName = 'C';\n        lastName = 'ALLEN';\n        break;\n\n      default:\n        address = \"\";\n        city = '';\n        state = '';\n        zip = '';\n        dob = '';\n        ssn = '';\n        phone = '';\n        firstName = \"\";\n        middleName = '';\n        lastName = '';\n    }\n\n    let postmanRequest = {\n      \"storeId\": `${storeID}`,\n      \"productId\": `${product}`,\n      \"agreementsSigned\": [\"MkAgrElectronicSignatureAgreement\", \"MkAgrCreditApplication\", \"MkAgrCreditCardTermsAndConditions\"],\n      \"balanceTransfers\": [],\n      \"comments\": \"\",\n      \"customFields\": [],\n      \"parties\": [{\n        \"firstName\": `${firstName}`,\n        \"lastName\": `${lastName}`,\n        \"middleName\": `${middleName}`,\n        \"birthDate\": `${dob}`,\n        \"socialSecurityNumber\": `${ssn}`,\n        \"mothersMaidenName\": \"Stark\",\n        \"residenceStatusEnumId\": \"RessOwn\",\n        \"housingPayment\": 0,\n        \"occupation\": \"r\",\n        \"financialAssets\": \"10000-24999\",\n        \"insiderOfVendor\": false,\n        \"jointCredit\": true,\n        \"contactInformation\": [{\n          \"postalContactMechPurposeId\": \"PostalPrimary\",\n          \"address1\": `${address}`,\n          \"address2\": \"\",\n          \"city\": `${city}`,\n          \"stateProvinceGeoId\": `${state}`,\n          \"postalCode\": `${zip}`,\n          \"usedSince\": \"2017-01-01\"\n        }, {\n          \"telecomContactMechPurposeId\": \"PhoneHome\",\n          \"contactNumber\": `${phone}`,\n          \"telecomPrimary\": true\n        }, {\n          \"emailContactMechPurposeId\": \"EmailPrimary\",\n          \"emailAddress\": \"anthony.villanueva+MD@mkdecision.com\"\n        }],\n        \"identifications\": [{\n          \"idType\": \"PtidDriverLicense\",\n          \"idValue\": \"J123962189451\",\n          \"issuedBy\": \"USA_MI\",\n          \"issueDate\": \"2018-01-01\",\n          \"expireDate\": \"2023-01-01\"\n        }],\n        \"employments\": [{\n          \"employmentStatusEnumId\": \"EmpsRetired\",\n          \"employmentStartDate\": \"2014-11-01\",\n          \"monthlyIncome\": 2500\n        }],\n        \"partyType\": \"PtyPerson\",\n        \"roleTypeId\": [\"PrimaryApplicant\"],\n        \"clientId\": \"0\"\n      }],\n      \"relationships\": []\n    };\n    let formattedPostmanRequest = JSON.stringify(postmanRequest, null, \"\\t\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }\n    }, !Array.isArray(product) ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      id: \"postmanURLRequest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, requestURL)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"inherit\",\n      onClick: copyPostmanURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }, \"Copy URL\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      id: \"postmanRequest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, formattedPostmanRequest)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"inherit\",\n      onClick: copyPostmanRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, \"Copy Request\")) : null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 5\n    }\n  }, props.integrationState === \"Experian\" && !Array.isArray(props.testProfilesState) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"store-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, \"Store\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.alphaStoreState,\n    onChange: e => props.setAlphaStoreState(e.target.value),\n    inputProps: {\n      name: 'exp-stores',\n      id: 'exp-stores-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, props.alphaStores[0]), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, props.alphaStores[3]), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, props.alphaStores[4]))) : null, props.integrationState === \"TransUnion\" && !Array.isArray(props.testProfilesState) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"tu-stores-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, \"Store\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.alphaStoreState,\n    onChange: e => props.setAlphaStoreState(e.target.value),\n    inputProps: {\n      name: 'tu-stores',\n      id: 'tu-stores-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, props.alphaStores[0]), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, props.alphaStores[2]), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }, props.alphaStores[4]))) : null, props.integrationState === \"Equifax\" && !Array.isArray(props.testProfilesState) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"eq-stores-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, \"Store\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.alphaStoreState,\n    onChange: e => props.setAlphaStoreState(e.target.value),\n    inputProps: {\n      name: 'eq-stores',\n      id: 'eq-stores-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, props.alphaStores[0]), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.alphaStores[4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, props.alphaStores[4]))) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 1\n    }\n  }), props.alphaStoreState === \"Biz Alpha\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"biz-alpha-products-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.productsState,\n    onChange: e => props.setProductsState(e.target.value),\n    inputProps: {\n      name: 'biz-alpha-products',\n      id: 'biz-alpha-products-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[0][0].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 11\n    }\n  }, props.products[0][0].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[0][1].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  }, props.products[0][1].productName))) : null, props.alphaStoreState === \"BBOW\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"bbow-alpha-products-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.productsState,\n    onChange: e => props.setProductsState(e.target.value),\n    inputProps: {\n      name: 'bbow-alpha-products',\n      id: 'bbow-alpha-products-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[1][0].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 11\n    }\n  }, props.products[1][0].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[1][1].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, props.products[1][1].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[1][2].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }, props.products[1][2].productName))) : null, props.alphaStoreState === \"BBOK\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"bbok-alpha-products-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.productsState,\n    onChange: e => props.setProductsState(e.target.value),\n    inputProps: {\n      name: 'bbok-alpha-products',\n      id: 'bbok-alpha-products-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[2][0].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, props.products[0][0].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[2][1].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, props.products[2][1].productName))) : null, props.alphaStoreState === \"TCM\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"tcm-alpha-products-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.productsState,\n    onChange: e => props.setProductsState(e.target.value),\n    inputProps: {\n      name: 'tcm-alpha-products',\n      id: 'tcm-alpha-products-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[3][0].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  }, props.products[3][0].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[3][1].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, props.products[3][1].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[3][2].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  }, props.products[3][2].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[3][3].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 11\n    }\n  }, props.products[3][3].productName))) : null, props.alphaStoreState === \"Demo\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"demo-alpha-products-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: props.productsState,\n    onChange: e => props.setProductsState(e.target.value),\n    inputProps: {\n      name: 'demo-alpha-products',\n      id: 'demo-alpha-products-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[4][0].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, props.products[4][0].productName), /*#__PURE__*/React.createElement(\"option\", {\n    value: props.products[4][1].productID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, props.products[4][1].productName))) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }\n  }), getPostmanRequest(props.alphaStoreState, props.testProfilesState, props.productsState));\n};\n\nexport default ConsumerDropdown;","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/test_cases/components/consumerDropdown.js"],"names":["React","Select","Card","CardContent","Button","InputLabel","ConsumerDropdown","props","getPostmanRequest","store","name","product","console","log","copyPostmanRequest","copyText","document","getElementById","innerText","toString","dummy","createElement","body","appendChild","setAttribute","select","execCommand","removeChild","alert","copyPostmanURL","firstName","middleName","lastName","address","ssn","city","state","zip","dob","phone","requestURL","storeID","postmanRequest","formattedPostmanRequest","JSON","stringify","Array","isArray","integrationState","testProfilesState","alphaStoreState","e","setAlphaStoreState","target","value","id","alphaStores","productsState","setProductsState","products","productID","productName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Select, Card, CardContent, Button} from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst ConsumerDropdown = props => {\n\n\n  function getPostmanRequest(store,name,product) {\n    console.log(store)\n    //Declaring copy JSON request function\n    function copyPostmanRequest(){\n      /* Get the text field */\n      var copyText = document.getElementById(\"postmanURLRequest\").innerText.toString();\n      var dummy = document.createElement(\"input\");\n      document.body.appendChild(dummy);\n      dummy.setAttribute('value', copyText);\n      dummy.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(dummy);\n    \n      /* Alert the copied text */\n      alert(\"URL copied to clipboard\");\n    }\n    \n\n    function copyPostmanURL(){\n      /* Get the text field */\n      var copyText = document.getElementById(\"postmanRequest\").innerText.toString();\n      var dummy = document.createElement(\"input\");\n      document.body.appendChild(dummy);\n      dummy.setAttribute('value', copyText);\n      dummy.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(dummy);\n    \n      /* Alert the copied text */\n      alert(\"Object copied to clipboard\");\n    }\n\n\n    let firstName = ''\n    let middleName = ''\n    let lastName = ''\n    \n    //Assigning personal information based on test case\n    let address = \"\"\n    let ssn = ''\n    let city = ''\n    let state = ''\n    let zip = ''\n    let dob = ''\n    let phone = ''\n    \n    let requestURL = \"\"\n    let storeID = \"\"\n    switch(store){\n      case \"Biz Alpha\":\n      requestURL = \"https://biz.alpha.mkdecision.com/ccos/submit-credit-application\";\n      storeID = \"MkCreditCards\"\n      break;\n      case \"BBOW\":\n      storeID = \"BankersBank\"\n      requestURL = \"https://bankersbank.close.alpha.mkdecision.com/ccos/submit-credit-application\"\n      break;      \n      case \"BBOK\":\n      storeID = \"bbok-demo\"      \n      requestURL = \"https://bbok.close.alpha.mkdecision.com/ccos/submit-credit-application\"\n      break;\n      case \"TCM\":\n      storeID = \"300265\"\n      requestURL = \"https://tcmbank.close.alpha.mkdecision.com/ccos/submit-credit-application\"\n      break; \n      case \"Demo\":\n      storeID = \"MkCreditCardsDemo\"  \n      requestURL = \"https://demo.close.mkdecision.com/ccos/submit-credit-application\"\n      break; \n\n    }\n    switch (name){\n      case \"SANDRA BUSTAMENTE\":\n      address = \"3320 MIDDLE BELLVILLE RD\";\n      city = 'LEXINGTON';\n      state = 'USA_OH';\n      zip = '44904';\n      dob = '1969-01-26';\n      ssn = '666696264';\n      phone = '4197563447';\n      firstName = \"SANDRA\";\n      middleName = '';\n      lastName = 'BUSTAMENTE';\n      break;\n      case \"DONALD MADERA\":\n      address = \"4212 ALABAMA AVE\";\n      city = 'KENNER';\n      state = 'USA_LA';\n      zip = '70065';\n      dob = '1916-01-21';\n      ssn = '666523068';\n      phone = '5044662001';\n      firstName = \"DONALD\";\n      middleName = '';\n      lastName = 'MADERA';\n      break;\n      case \"ALAN HARGIS\":\n      address = \"2274 FARNWORTH ST\";\n      city = 'CAMARILLO';\n      state = 'USA_CA';\n      zip = '93010';\n      dob = '1946-01-02';\n      ssn = '666541587';\n      phone = '5554448441';\n      firstName = \"ALAN\";\n      middleName = '';\n      lastName = 'HARGIS';\n      break;\n      case \"MARIA STEPHENS\":\n      address = \"111 E SCHIRMER ST\";\n      city = 'SAINT LOUIS';\n      state = 'USA_MO';\n      zip = '63111';\n      dob = '1935-03-20';\n      ssn = '666550773';\n      phone = '2815477898';\n      firstName = \"MARIA\";\n      middleName = '';\n      lastName = 'STEPHENS';\n      break;\n      case \"DAVID BUI\":\n      address = \"6441 KEATS AVE S\";\n      city = 'COTTAGE GROVE';\n      state = 'USA_MO';\n      zip = '63111';\n      dob = '1935-03-20';\n      ssn = '666550773';\n      phone = '2815477898';\n      firstName = \"DAVID\";\n      middleName = '';\n      lastName = 'BUI';\n      break;\n      case \"MINERVA TURNER\":\n      address = \"10385 S SUMMIT PEAK PL\";\n      city = 'TUCSON';\n      state = 'USA_AZ';\n      zip = '85706';\n      dob = '1956-07-07';\n      ssn = '666030873';\n      phone = '5208078680';\n      firstName = \"MINERVA\";\n      middleName = '';\n      lastName = 'TURNER';\n      break;\n      case \"FLORENCIA ERIKA\":\n      address = \"PO BOX 327\";\n      city = 'SIERRA BLANCA';\n      state = 'USA_TX';\n      zip = '79851';\n      dob = '1964-1208';\n      ssn = '666345030';\n      phone = '9153691679';\n      firstName = \"FLORENCIA\";\n      middleName = '';\n      lastName = 'ERIKA';\n      break;\n      case \"DALTON VAN LEER\":\n      address = \"6088 S 2075 E\";\n      city = 'SALT LAKE CITY';\n      state = 'USA_UT';\n      zip = '84121';\n      dob = '1972-05-27';\n      ssn = '666231354';\n      phone = '8018085292';\n      firstName = \"DALTON\";\n      middleName = '';\n      lastName = 'VAN LEER';\n      break;\n      case \"DHINU DURRELL\":\n      address = \"4101 DRIPPING SPRINGS RD\";\n      city = 'GLASGOW';\n      state = 'USA_KY';\n      zip = '42141';\n      dob = '1962-04-21';\n      ssn = '666415182';\n      phone = '2707833151';\n      firstName = \"DHINU\";\n      middleName = '';\n      lastName = 'DURRELL';\n      break;\n      case \"JOHNETTA S GUALTNEY\":\n      address = \"4757 W PK\";\n      city = 'PLANO';\n      state = 'USA_TX';\n      zip = '75093';\n      dob = '1990-08-08';\n      ssn = '666348518';\n      phone = '7148894502';\n      firstName = \"JOHNETTA\";\n      middleName = 'S';\n      lastName = 'GUALTNEY';\n      break;\n      case \"BILLY C ALLEN\":\n        address = \"2508 SEEDLING GROVE CT\";\n        city = 'VIRGINIA BEACH';\n        state = 'USA_VA';\n        zip = '23456';\n        dob = '1978-03-20';\n        ssn = '666221475';\n        phone = '3632621457';\n        firstName = \"BILLY\";\n        middleName = 'C';\n        lastName = 'ALLEN';\n        break;\n      default:\n      address = \"\";\n      city = '';\n      state = '';\n      zip = '';\n      dob = '';\n      ssn = '';\n      phone = '';\n      firstName = \"\";\n      middleName = '';\n      lastName = '';\n    }\n    \n    \n    let postmanRequest = {\n      \"storeId\": `${storeID}`,\n      \"productId\": `${product}`,\n      \"agreementsSigned\": [\n          \"MkAgrElectronicSignatureAgreement\",\n          \"MkAgrCreditApplication\",\n          \"MkAgrCreditCardTermsAndConditions\"\n      ],\n      \"balanceTransfers\": [],\n      \"comments\": \"\",\n      \"customFields\": [],\n      \"parties\": [\n          {\n              \"firstName\": `${firstName}`,\n              \"lastName\": `${lastName}`,\n              \"middleName\": `${middleName}`,\n              \"birthDate\": `${dob}`,\n              \"socialSecurityNumber\": `${ssn}`,\n              \"mothersMaidenName\": \"Stark\",\n              \"residenceStatusEnumId\": \"RessOwn\",\n              \"housingPayment\": 0,\n              \"occupation\": \"r\",\n              \"financialAssets\": \"10000-24999\",\n              \"insiderOfVendor\": false,\n              \"jointCredit\": true,\n              \"contactInformation\": [\n                  {\n                      \"postalContactMechPurposeId\": \"PostalPrimary\",\n                      \"address1\": `${address}`,\n                      \"address2\": \"\",\n                      \"city\": `${city}`,\n                      \"stateProvinceGeoId\": `${state}`,\n                      \"postalCode\": `${zip}`,\n                      \"usedSince\": \"2017-01-01\"\n                  },\n                  {\n                      \"telecomContactMechPurposeId\": \"PhoneHome\",\n                      \"contactNumber\": `${phone}`,\n                      \"telecomPrimary\": true\n                  },\n                  {\n                      \"emailContactMechPurposeId\": \"EmailPrimary\",\n                      \"emailAddress\": \"anthony.villanueva+MD@mkdecision.com\"\n                  }           \n    \n              ],\n                  \"identifications\": [\n                  {\n                      \"idType\": \"PtidDriverLicense\",\n                      \"idValue\": \"J123962189451\",\n                      \"issuedBy\": \"USA_MI\",\n                      \"issueDate\": \"2018-01-01\",\n                      \"expireDate\": \"2023-01-01\"\n                  }],\n              \"employments\": [\n                  {\n                      \"employmentStatusEnumId\": \"EmpsRetired\",\n                      \"employmentStartDate\": \"2014-11-01\",\n                      \"monthlyIncome\": 2500\n                  }\n              ],\n              \"partyType\": \"PtyPerson\",\n              \"roleTypeId\": [\n                  \"PrimaryApplicant\"\n              ],\n              \"clientId\": \"0\"\n          }\n      ],\n      \"relationships\": []\n    }\n    let formattedPostmanRequest = JSON.stringify(postmanRequest, null, \"\\t\")\n    return (\n      <div>\n        {!Array.isArray(product)?\n        <div>\n          <Card>\n                <CardContent id=\"postmanURLRequest\">{requestURL}</CardContent>\n          </Card>\n          <br/>\n          <Button variant=\"contained\" color=\"inherit\" onClick={copyPostmanURL}>Copy URL</Button>\n          <br/>\n          <br/>\n          <Card>\n            <CardContent id=\"postmanRequest\">{formattedPostmanRequest}</CardContent>\n          </Card>\n          <br/>\n          <Button variant=\"contained\" color=\"inherit\" onClick={copyPostmanRequest}>Copy Request</Button>\n          </div>:null}\n      </div>\n    )\n    }\n\n    return(\n    <div>\n    {props.integrationState === \"Experian\"  && !Array.isArray(props.testProfilesState) ? (\n      <div>\n        <InputLabel htmlFor=\"store-native-simple\">Store</InputLabel>\n        <Select \n          native\n          value={props.alphaStoreState} \n          onChange={e => props.setAlphaStoreState(e.target.value)}\n          inputProps={{\n            name: 'exp-stores',\n            id: 'exp-stores-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.alphaStores[0]}>{props.alphaStores[0]}</option>\n          <option value={props.alphaStores[3]}>{props.alphaStores[3]}</option>\n          <option value={props.alphaStores[4]}>{props.alphaStores[4]}</option>\n\n        </Select>\n        </div>\n    ) : null}\n        {props.integrationState === \"TransUnion\"  && !Array.isArray(props.testProfilesState) ? (\n      <div>\n        <InputLabel htmlFor=\"tu-stores-native-simple\">Store</InputLabel>\n        <Select \n          native\n          value={props.alphaStoreState} \n          onChange={e => props.setAlphaStoreState(e.target.value)}\n          inputProps={{\n            name: 'tu-stores',\n            id: 'tu-stores-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.alphaStores[0]}>{props.alphaStores[0]}</option>\n          <option value={props.alphaStores[2]}>{props.alphaStores[2]}</option>\n          <option value={props.alphaStores[4]}>{props.alphaStores[4]}</option>\n        </Select>\n        </div>\n    ) : null}\n        {props.integrationState === \"Equifax\"  && !Array.isArray(props.testProfilesState) ? (\n      <div>\n        <InputLabel htmlFor=\"eq-stores-native-simple\">Store</InputLabel>\n        <Select \n          native\n          value={props.alphaStoreState} \n          onChange={e => props.setAlphaStoreState(e.target.value)}\n          inputProps={{\n            name: 'eq-stores',\n            id: 'eq-stores-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.alphaStores[0]}>{props.alphaStores[0]}</option>\n          <option value={props.alphaStores[4]}>{props.alphaStores[4]}</option>\n        </Select>\n        </div>\n    ) : null}\n<br/>\n    {/* Product Dropdown */}\n    {props.alphaStoreState === \"Biz Alpha\" ? (\n      <div>\n        <InputLabel htmlFor=\"biz-alpha-products-native-simple\">Products</InputLabel>\n        <Select \n          native\n          value={props.productsState} \n          onChange={e => props.setProductsState(e.target.value)}\n          inputProps={{\n            name: 'biz-alpha-products',\n            id: 'biz-alpha-products-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.products[0][0].productID}>{props.products[0][0].productName}</option>\n          <option value={props.products[0][1].productID}>{props.products[0][1].productName}</option>\n\n        </Select>\n        </div>\n    ) : null}\n      {props.alphaStoreState === \"BBOW\" ? (\n      <div>\n        <InputLabel htmlFor=\"bbow-alpha-products-native-simple\">Products</InputLabel>\n        <Select \n          native\n          value={props.productsState} \n          onChange={e => props.setProductsState(e.target.value)}\n          inputProps={{\n            name: 'bbow-alpha-products',\n            id: 'bbow-alpha-products-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.products[1][0].productID}>{props.products[1][0].productName}</option>\n          <option value={props.products[1][1].productID}>{props.products[1][1].productName}</option>\n          <option value={props.products[1][2].productID}>{props.products[1][2].productName}</option>\n        </Select>\n        </div>\n    ) : null}\n            {props.alphaStoreState === \"BBOK\" ? (\n      <div>\n        <InputLabel htmlFor=\"bbok-alpha-products-native-simple\">Products</InputLabel>\n        <Select \n          native\n          value={props.productsState} \n          onChange={e => props.setProductsState(e.target.value)}\n          inputProps={{\n            name: 'bbok-alpha-products',\n            id: 'bbok-alpha-products-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.products[2][0].productID}>{props.products[0][0].productName}</option>\n          <option value={props.products[2][1].productID}>{props.products[2][1].productName}</option>\n        </Select>\n        </div>\n    ) : null}\n        {props.alphaStoreState === \"TCM\" ? (\n        <div>\n        <InputLabel htmlFor=\"tcm-alpha-products-native-simple\">Products</InputLabel>\n        <Select \n          native\n          value={props.productsState} \n          onChange={e => props.setProductsState(e.target.value)}\n          inputProps={{\n            name: 'tcm-alpha-products',\n            id: 'tcm-alpha-products-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.products[3][0].productID}>{props.products[3][0].productName}</option>\n          <option value={props.products[3][1].productID}>{props.products[3][1].productName}</option>\n          <option value={props.products[3][2].productID}>{props.products[3][2].productName}</option>\n          <option value={props.products[3][3].productID}>{props.products[3][3].productName}</option>\n        </Select>\n        </div>\n    ) : null}\n      {props.alphaStoreState === \"Demo\" ? (\n      <div>\n        <InputLabel htmlFor=\"demo-alpha-products-native-simple\">Products</InputLabel>\n        <Select \n          native\n          value={props.productsState} \n          onChange={e => props.setProductsState(e.target.value)}\n          inputProps={{\n            name: 'demo-alpha-products',\n            id: 'demo-alpha-products-native-simple',\n        }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={props.products[4][0].productID}>{props.products[4][0].productName}</option>\n          <option value={props.products[4][1].productID}>{props.products[4][1].productName}</option>\n        </Select>\n        </div>\n    ) : null}\n    <br/>\n    {getPostmanRequest(props.alphaStoreState, props.testProfilesState,props.productsState )}\n    </div>\n    )}\n\nexport default ConsumerDropdown\n\n\n\n"]},"metadata":{},"sourceType":"module"}