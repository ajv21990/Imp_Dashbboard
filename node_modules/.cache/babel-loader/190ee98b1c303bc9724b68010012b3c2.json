{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/security/Security_Dashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, Button } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis, Legend, Tooltip, BarChart, Bar } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\nconst ClientChartData = getClientBurnData();\nlet PieChartData = [{\n  name: \"Internally Reported\",\n  value: 0,\n  color: \"warning\"\n}, {\n  name: \"Customer Reported\",\n  value: 0,\n  color: \"primary\"\n}];\nexport default function QA_Dashboard(props) {\n  // Setting constants for QA Data\n  const [closedIssues, setClosedIssues] = useState([]);\n  const [openIssues, setOpenIssues] = useState([]);\n  const [createdIssues, setCreatedIssues] = useState([]);\n  const [changesIssues, setChangesIssues] = useState([]);\n  const [janIssues, setJanIssues] = useState([]);\n  const [febIssues, setFebIssues] = useState([]);\n  const [cusReportBugs, setCusReportBugs] = useState([]);\n  PieChartData[1].value = cusReportBugs.total_count;\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count;\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var [mainChartState, setMainChartState] = useState(\"engineer\");\n  var [ClientChartState, setClientChartState] = useState(\"YTD\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Security\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Audit\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Issue Breakdown\",\n    upperTitle: true,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 144,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: PieChartData,\n    innerRadius: 30,\n    outerRadius: 40,\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, PieChartData.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: theme.palette[entry.color].main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pieChartLegendWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, PieChartData.map(({\n    name,\n    value,\n    color\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: color,\n    className: classes.legendItemContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dot, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      whiteSpace: \"nowrap\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, \"\\xA0\", name, \"\\xA0\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }\n  }, \"\\xA0\", value)))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Bugs Detected This Year\",\n    upperTitle: true,\n    bodyClass: classes.fullHeightBody,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.visitsNumberContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"xl\",\n    weight: \"medium\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, janIssues.total_count + febIssues.total_count)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 100,\n    height: 30,\n    data: [{\n      value: janIssues.total_count\n    }, {\n      value: febIssues.total_count\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Defect Burn Time (hours)\"), mainChartState === \"engineer\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"Fulfillment\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dot, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, \"Dev\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, \"Product\"))), /*#__PURE__*/React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"engineer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, \"Engineer\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, \"Product\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, mainChartState === \"engineer\" ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 75, 150, 225],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"month\",\n    tickFormatter: i => i + \" 21\",\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"Dev\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: {\n      strokeWidth: 2,\n      fill: theme.palette.warning.dark\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"Fulfillment\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ProductChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 5, 10, 15, 20, 25],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"product\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Jan\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Feb\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Mar\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, \"Client Defect Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }, \"Issues vs Burn Time\"))), /*#__PURE__*/React.createElement(Select, {\n      value: ClientChartState,\n      onChange: e => setClientChartState(e.target.value),\n      input: /*#__PURE__*/React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }\n      }),\n      autoWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"YTD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }\n    }, \"Issues\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"burn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 19\n      }\n    }, \"Burn Time\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, ClientChartState === \"YTD\" ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ClientChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 15, 25, 35, 45],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"stores\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Jan\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Feb\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"Mar\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: ClientChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    ticks: [0, 25, 50, 75, 100, 125, 150],\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"stores\",\n    tickFormatter: i => i,\n    tick: {\n      fill: theme.palette.text.primary + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.primary + \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"JanBurn\",\n    fill: \"#1096CB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"FebBurn\",\n    fill: \"#FF5C93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"MarBurn\",\n    fill: \"#3CD4A0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 15\n    }\n  })))))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var Fulfillment = [69.43, 67.51, 76.34];\n  var Dev = [80.75, 164, 156.63];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov', 'Dec'];\n\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Fulfillment: Fulfillment[i],\n      Dev: Dev[i],\n      month: month[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getProductBurnData() {\n  var resultArray = [];\n  var Jan = [6.35, 0, 31.01, 0, 20.47, 1.80];\n  var Feb = [1.15, 5.83, 3.74, 0, 18.07, 3.21];\n  var Mar = [1.95, 1.45, 0, 0, .17, 0];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services'];\n\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      Jan: Jan[i],\n      Feb: Feb[i],\n      Mar: Mar[i],\n      product: product[i]\n    });\n  }\n\n  return resultArray;\n}\n\nfunction getClientBurnData() {\n  var resultArray = [];\n  var Jan = [4, 0, 4, 0, 0, 0, 26, 5, 0, 5, 11, 8, 0];\n  var Feb = [7, 2, 8, 2, 1, 0, 43, 3, 5, 5, 5, 1, 0];\n  var Mar = [2, 1, 1, 0, 2, 1, 33, 3, 6, 1, 2, 1, 2];\n  var JanBurn = [4, 0, 6.79, 0, 0, 0, 51.72, 17.36, 0, 8.93, 27.66, 9.86, 0];\n  var FebBurn = [13.08, 3.88, 19.07, 6.32, .18, 0, 147.66, 7.76, 17.29, 9.30, 15.07, 4.59, 0];\n  var MarBurn = [21.28, 4.10, 6.07, 0, 6.27, .17, 147.67, 11.77, 8.33, 4.68, 7.75, 1.02, 5.13];\n  let stores = [\"AM Bank\", 'BBOW', 'BBOK', 'Beneficial', 'CSB New Castle', 'Equitable', 'Evergreen', 'FBA', 'Las Animas', 'ICBA', 'TCM', 'UBB', 'WaFd'];\n\n  for (let i = 0; i < stores.length; i++) {\n    resultArray.push({\n      Jan: Jan[i],\n      Feb: Feb[i],\n      Mar: Mar[i],\n      JanBurn: JanBurn[i],\n      FebBurn: FebBurn[i],\n      MarBurn: MarBurn[i],\n      stores: stores[i]\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/anthonyvillanueva/Desktop/Implementation/Updates/Imp_Dashbboard/src/pages/security/Security_Dashboard.js"],"names":["React","useEffect","useState","axios","Grid","LinearProgress","Select","OutlinedInput","MenuItem","Button","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","Legend","Tooltip","BarChart","Bar","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","ProductChartData","getProductBurnData","ClientChartData","getClientBurnData","PieChartData","name","value","color","QA_Dashboard","props","closedIssues","setClosedIssues","openIssues","setOpenIssues","createdIssues","setCreatedIssues","changesIssues","setChangesIssues","janIssues","setJanIssues","febIssues","setFebIssues","cusReportBugs","setCusReportBugs","total_count","classes","theme","mainChartState","setMainChartState","ClientChartState","setClientChartState","card","fullHeightBody","map","entry","index","palette","main","pieChartLegendWrapper","legendItemContainer","whiteSpace","fontSize","visitsNumberContainer","primary","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","left","bottom","fill","text","i","strokeWidth","warning","dark","stroke","getRandomData","length","min","max","multiplier","maxDiff","array","Array","lastValue","item","randomValue","Math","floor","random","resultArray","Fulfillment","Dev","month","push","Jan","Feb","Mar","product","JanBurn","FebBurn","MarBurn","stores"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\n\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n  Legend,\n  Tooltip,\n  BarChart,\n  Bar\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst ProductChartData = getProductBurnData();\nconst ClientChartData = getClientBurnData();\n\nlet PieChartData = [\n  { name: \"Internally Reported\", value: 0, color: \"warning\" },\n  { name: \"Customer Reported\", value: 0, color: \"primary\" },\n];\n\n\n\nexport default function QA_Dashboard(props) {\n// Setting constants for QA Data\nconst [closedIssues,setClosedIssues] = useState([])\nconst [openIssues,setOpenIssues] = useState([])\nconst [createdIssues,setCreatedIssues] = useState([])\nconst [changesIssues,setChangesIssues] = useState([])\nconst [janIssues,setJanIssues] = useState([])\nconst [febIssues,setFebIssues] = useState([])\nconst [cusReportBugs,setCusReportBugs] = useState([])\n\n\n\n  PieChartData[1].value = cusReportBugs.total_count\n  PieChartData[0].value = createdIssues.total_count - cusReportBugs.total_count\n\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"engineer\");\n  var [ClientChartState, setClientChartState] = useState(\"YTD\");\n\n  return (\n    <>\n      <PageTitle title=\"Security\"/>\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Audit\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <hr></hr>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Issue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Bugs Detected This Year\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                {janIssues.total_count + febIssues.total_count}\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: janIssues.total_count },\n                  { value: febIssues.total_count },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Defect Burn Time (hours)\n                </Typography>\n                {(mainChartState === \"engineer\")?\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                    Fulfillment\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Dev\n                    </Typography>\n                  </div>\n                </div>:\n                <div className={classes.mainChartHeaderLabels}>\n                <div className={classes.mainChartHeaderLabel}>\n                  <Typography className={classes.mainChartLegentElement}>\n                    Product\n                  </Typography>\n                </div>\n                </div>}\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"engineer\">Engineer</MenuItem>\n                  {/* <MenuItem value=\"weekly\">Client</MenuItem> */}\n                  <MenuItem value=\"product\">Product</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            {(mainChartState === \"engineer\")?\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 75, 150, 225]}\n                  tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.primary + \"80\"}\n                />\n                <XAxis\n                dataKey = 'month'\n                  tickFormatter={i => i+\" 21\"}\n                  tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.primary + \"80\"}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"Dev\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={{\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.dark,\n                  }}                  \n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"Fulfillment\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n                <Tooltip />\n              </ComposedChart>\n            </ResponsiveContainer>\n            :             \n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ProductChartData}\n            >\n              <YAxis\n                ticks={[0, 5, 10, 15, 20, 25]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'product'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"Jan\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"Feb\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"Mar\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>}\n          </Widget>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Widget\n            title=\"Client Monthly Stats\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid> */}\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Client Defect Tracker\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                <div className={classes.mainChartHeaderLabel}>\n                  <Typography className={classes.mainChartLegentElement}>\n                    Issues vs Burn Time\n                  </Typography>\n                </div>\n                </div>\n                <Select\n                  value={ClientChartState}\n                  onChange={e => setClientChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"YTD\">Issues</MenuItem>\n                  <MenuItem value=\"burn\">Burn Time</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            {(ClientChartState === \"YTD\")?\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ClientChartData}\n            >\n              <YAxis\n                ticks={[0, 15, 25, 35, 45]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'stores'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"Jan\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"Feb\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"Mar\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>\n            :             \n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n            <BarChart\n              margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n              data={ClientChartData}\n            >\n              <YAxis\n                ticks={[0, 25, 50, 75, 100,125, 150]}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <XAxis\n              dataKey = 'stores'\n                tickFormatter={i => i}\n                tick={{ fill: theme.palette.text.primary + \"80\", fontSize: 14 }}\n                stroke={theme.palette.text.primary + \"80\"}\n              />\n              <Tooltip />\n              <Bar\n                dataKey=\"JanBurn\"\n                fill=\"#1096CB\"  \n              />\n              <Bar\n                dataKey=\"FebBurn\"\n                fill=\"#FF5C93\"  \n              />\n              <Bar\n                dataKey=\"MarBurn\"\n                fill= \"#3CD4A0\"  \n              />\n              \n            </BarChart>\n          </ResponsiveContainer>}\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var Fulfillment = [69.43,67.51,76.34];\n  var Dev = [80.75,164,156.63];\n  let month = [\"Jan\", 'Feb', 'Mar', 'Apr', 'May', 'Jun', \"July\", 'Aug', \"Sept\", \"Oct\", 'Nov','Dec']\n  for (let i = 0; i < month.length; i++) {\n    resultArray.push({\n      Fulfillment: Fulfillment[i],\n      Dev: Dev[i],\n      month: month[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getProductBurnData(){\n  var resultArray = [];\n  var Jan = [6.35,0,31.01,0,20.47,1.80];\n  var Feb = [1.15,5.83,3.74,0,18.07,3.21];\n  var Mar = [1.95,1.45,0,0,.17,0];\n  let product = [\"Store\", 'CCOS', 'Deposits', 'Integrations', 'Vendor Dashboard', 'Close Services']\n  for (let i = 0; i < product.length; i++) {\n    resultArray.push({\n      Jan : Jan[i],\n      Feb : Feb[i],\n      Mar : Mar[i],\n      product: product[i]\n    });\n  }\n  return resultArray;\n}\n\nfunction getClientBurnData(){\n  var resultArray = [];\n  var Jan = [4,0,4,0,0,0,26,5,0,5,11,8,0];\n  var Feb = [7,2,8,2,1,0,43,3,5,5,5,1,0];\n  var Mar = [2,1,1,0,2,1,33,3,6,1,2,1,2];\n\n  var JanBurn = [4,0,6.79,0,0,0,51.72,17.36,0,8.93,27.66,9.86,0];\n  var FebBurn = [13.08,3.88,19.07,6.32,.18,0,147.66,7.76,17.29,9.30,15.07,4.59,0];\n  var MarBurn = [21.28,4.10,6.07,0,6.27,.17,147.67,11.77,8.33,4.68,7.75,1.02,5.13];\n\n  let stores = [\"AM Bank\", 'BBOW', 'BBOK', 'Beneficial', 'CSB New Castle', 'Equitable','Evergreen','FBA','Las Animas','ICBA','TCM','UBB','WaFd']\n  for (let i = 0; i < stores.length; i++) {\n    resultArray.push({\n      Jan : Jan[i],\n      Feb : Feb[i],\n      Mar : Mar[i],\n      JanBurn : JanBurn[i],\n      FebBurn : FebBurn[i],\n      MarBurn : MarBurn[i],\n      stores: stores[i]\n    });\n  }\n  return resultArray;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}